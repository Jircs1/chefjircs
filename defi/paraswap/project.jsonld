{
    "@context": {
        "@vocab": "http://colorfulnotion.com/vocab",
        "chef": "http://colorfulnotion.com/chef/",
        "evm": "http://colorfulnotion.com/"
    },
    "@id": "chef:awesome-web3/defi/paraswap",
    "@type": "chef:Project",
    "chef:name": "paraswap",
    "chef:dataset": "defi",
    "chef:contracts": [
        {
            "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper",
            "@type": "chef:Contract",
            "chef:contractName": "AugustusSwapper",
            "chef:Deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper",
                    "evm:chainID": 1,
                    "evm:address": "0x1bd435f3c054b6e901b7b108a0ab7617c808677b"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper",
                    "evm:chainID": 1,
                    "evm:address": "0x86969d29f5fd327e1009ba66072be22db6017cc6"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper",
                    "evm:chainID": 1,
                    "evm:address": "0x9509665d015bfe3c77aa5ad6ca20c8afa1d98989"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper",
                    "evm:chainID": 1,
                    "evm:address": "0xf90e98f3d8dce44632e5020abf2e122e0f99dfab"
                }
            ]
        },
        {
            "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting",
            "@type": "chef:Contract",
            "chef:contractName": "TokenVesting",
            "chef:Deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting",
                    "evm:chainID": 1,
                    "evm:address": "0x348aa814a72970e76d5756a2cda16e7e8f245aab"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting",
                    "evm:chainID": 1,
                    "evm:address": "0x51d2f2c65d043118eb4329fcbc738943f494609f"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting",
                    "evm:chainID": 1,
                    "evm:address": "0x6a3cca09b1c2b83834124c8646a68b9bad2a07b9"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting",
                    "evm:chainID": 1,
                    "evm:address": "0xb074094d2e858b25d129989644248f9f6946e081"
                }
            ]
        },
        {
            "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe",
            "@type": "chef:Contract",
            "chef:contractName": "GnosisSafe",
            "chef:Deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe",
                    "evm:chainID": 1,
                    "evm:address": "0x5a61d9214adefd7669428a03a4e8734a00e9f464"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe",
                    "evm:chainID": 1,
                    "evm:address": "0x6df5e7b236a4f14e08c27e09202b4d1865905e9b"
                }
            ]
        },
        {
            "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP",
            "@type": "chef:Contract",
            "chef:contractName": "PSP",
            "chef:Deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP",
                    "evm:chainID": 1,
                    "evm:address": "0xcafe001067cdef266afb7eb5a286dcfd277f3de5"
                }
            ]
        }
    ],
    "chef:abi": [
        {
            "anonymous": false,
            "@id": "0x4aa65286df310c4e8390d962c75f50380b8260d96ea27cf14847cd683e22d9db",
            "chef:signature": "AdapterInitialized(address)",
            "@type": "chef:Event",
            "chef:name": "AdapterInitialized",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "adapter",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xf0be17aaae5a3633105aafe0689d8beb04dc66d5c51babf7086efebbb4e7ba82",
            "chef:signature": "Bought(address,address,address,address,uint256,uint256,string)",
            "@type": "chef:Event",
            "chef:name": "Bought",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "initiator",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "beneficiary",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "srcToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "destToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "srcAmount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "receivedAmount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "referrer",
                    "type": "string",
                    "@type": "string"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xb9f46e095476339db7821812d7e8ca40dad9d9b08ba10b54eb67faacc2aa5582",
            "chef:signature": "FeeTaken(uint256,uint256,uint256)",
            "@type": "chef:Event",
            "chef:name": "FeeTaken",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "fee",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "partnerShare",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "paraswapShare",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
            "chef:signature": "OwnershipTransferred(address,address)",
            "@type": "chef:Event",
            "chef:name": "OwnershipTransferred",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x9cc2048b8af5eadff75759a3169b369efc538fb79c760fd396a4b355410b41b7",
            "chef:signature": "Swapped(address,address,address,address,uint256,uint256,uint256,string)",
            "@type": "chef:Event",
            "chef:name": "Swapped",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "initiator",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "beneficiary",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "srcToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "destToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "srcAmount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "receivedAmount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "expectedAmount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "referrer",
                    "type": "string",
                    "@type": "string"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0xe1f21c67",
            "chef:signature": "approve(address,address,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "approve",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "token",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0xf95a49eb",
            "chef:signature": "buy((address,address,uint256,uint256,address,string,bool,(address,address,uint256,uint256,bytes,uint256)[]))",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "buy",
            "chef:inputs": [
                {
                    "components": [
                        {
                            "internalType": "address",
                            "name": "fromToken",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "toToken",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "fromAmount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "toAmount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address payable",
                            "name": "beneficiary",
                            "type": "address"
                        },
                        {
                            "internalType": "string",
                            "name": "referrer",
                            "type": "string"
                        },
                        {
                            "internalType": "bool",
                            "name": "useReduxToken",
                            "type": "bool"
                        },
                        {
                            "components": [
                                {
                                    "internalType": "address payable",
                                    "name": "exchange",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "targetExchange",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "fromAmount",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "toAmount",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "payload",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "networkFee",
                                    "type": "uint256"
                                }
                            ],
                            "internalType": "struct Utils.BuyRoute[]",
                            "name": "route",
                            "type": "tuple[]"
                        }
                    ],
                    "internalType": "struct Utils.BuyData",
                    "name": "data",
                    "type": "tuple",
                    "@type": "tuple"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0xf9355f72",
            "chef:signature": "buyOnUniswap(uint256,uint256,address[],uint8)",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "buyOnUniswap",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "amountInMax",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "amountOut",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address[]",
                    "name": "path",
                    "type": "address[]",
                    "@type": "address[]"
                },
                {
                    "internalType": "uint8",
                    "name": "referrer",
                    "type": "uint8",
                    "@type": "uint8"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0x33635226",
            "chef:signature": "buyOnUniswapFork(address,bytes32,uint256,uint256,address[],uint8)",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "buyOnUniswapFork",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "factory",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bytes32",
                    "name": "initCode",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "internalType": "uint256",
                    "name": "amountInMax",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "amountOut",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address[]",
                    "name": "path",
                    "type": "address[]",
                    "@type": "address[]"
                },
                {
                    "internalType": "uint8",
                    "name": "referrer",
                    "type": "uint8",
                    "@type": "uint8"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0xdb21e48d",
            "chef:signature": "changeUniswapProxy(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "changeUniswapProxy",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "uniswapProxy",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0xa4a6c336",
            "chef:signature": "confirmUniswapProxyChange()",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "confirmUniswapProxyChange",
            "chef:inputs": [],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0xa745d5bd",
            "chef:signature": "getChangeRequestedBlock()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getChangeRequestedBlock",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0x54f6127f",
            "chef:signature": "getData(bytes32)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getData",
            "chef:inputs": [
                {
                    "internalType": "bytes32",
                    "name": "key",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0x5459060d",
            "chef:signature": "getFeeWallet()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getFeeWallet",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0xb69bd7aa",
            "chef:signature": "getPartnerRegistry()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getPartnerRegistry",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0x2af3feb0",
            "chef:signature": "getPendingUniswapProxy()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getPendingUniswapProxy",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0x119a5e96",
            "chef:signature": "getTimeLock()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getTimeLock",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0xd2c4b598",
            "chef:signature": "getTokenTransferProxy()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getTokenTransferProxy",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0x08defdee",
            "chef:signature": "getUniswapProxy()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getUniswapProxy",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0x0d8e6e2c",
            "chef:signature": "getVersion()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getVersion",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string",
                    "@type": "string"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0x915eb973",
            "chef:signature": "getWhitelistAddress()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getWhitelistAddress",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0x95b6ef0c",
            "chef:signature": "initialize(address,address,address,address,address,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "initialize",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "whitelist",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "reduxToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "partnerRegistry",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address payable",
                    "name": "feeWallet",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "uniswapProxy",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "timelock",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0x18800219",
            "chef:signature": "initializeAdapter(address,bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "initializeAdapter",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "adapter",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0xf7b637bb",
            "chef:signature": "isInitialized(bytes32)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "isInitialized",
            "chef:inputs": [
                {
                    "internalType": "bytes32",
                    "name": "key",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0xec1d21dd",
            "chef:signature": "megaSwap((address,uint256,uint256,uint256,address,string,bool,(uint256,(address,uint256,(address,address,uint256,bytes,uint256)[])[])[]))",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "megaSwap",
            "chef:inputs": [
                {
                    "components": [
                        {
                            "internalType": "address",
                            "name": "fromToken",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "fromAmount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "toAmount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "expectedAmount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address payable",
                            "name": "beneficiary",
                            "type": "address"
                        },
                        {
                            "internalType": "string",
                            "name": "referrer",
                            "type": "string"
                        },
                        {
                            "internalType": "bool",
                            "name": "useReduxToken",
                            "type": "bool"
                        },
                        {
                            "components": [
                                {
                                    "internalType": "uint256",
                                    "name": "fromAmountPercent",
                                    "type": "uint256"
                                },
                                {
                                    "components": [
                                        {
                                            "internalType": "address",
                                            "name": "to",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "totalNetworkFee",
                                            "type": "uint256"
                                        },
                                        {
                                            "components": [
                                                {
                                                    "internalType": "address payable",
                                                    "name": "exchange",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "targetExchange",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "uint256",
                                                    "name": "percent",
                                                    "type": "uint256"
                                                },
                                                {
                                                    "internalType": "bytes",
                                                    "name": "payload",
                                                    "type": "bytes"
                                                },
                                                {
                                                    "internalType": "uint256",
                                                    "name": "networkFee",
                                                    "type": "uint256"
                                                }
                                            ],
                                            "internalType": "struct Utils.Route[]",
                                            "name": "routes",
                                            "type": "tuple[]"
                                        }
                                    ],
                                    "internalType": "struct Utils.Path[]",
                                    "name": "path",
                                    "type": "tuple[]"
                                }
                            ],
                            "internalType": "struct Utils.MegaSwapPath[]",
                            "name": "path",
                            "type": "tuple[]"
                        }
                    ],
                    "internalType": "struct Utils.MegaSwapSellData",
                    "name": "data",
                    "type": "tuple",
                    "@type": "tuple"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0x8f00eccb",
            "chef:signature": "multiSwap((address,uint256,uint256,uint256,address,string,bool,(address,uint256,(address,address,uint256,bytes,uint256)[])[]))",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "multiSwap",
            "chef:inputs": [
                {
                    "components": [
                        {
                            "internalType": "address",
                            "name": "fromToken",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "fromAmount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "toAmount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "expectedAmount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address payable",
                            "name": "beneficiary",
                            "type": "address"
                        },
                        {
                            "internalType": "string",
                            "name": "referrer",
                            "type": "string"
                        },
                        {
                            "internalType": "bool",
                            "name": "useReduxToken",
                            "type": "bool"
                        },
                        {
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "to",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "totalNetworkFee",
                                    "type": "uint256"
                                },
                                {
                                    "components": [
                                        {
                                            "internalType": "address payable",
                                            "name": "exchange",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "targetExchange",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "percent",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "bytes",
                                            "name": "payload",
                                            "type": "bytes"
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "networkFee",
                                            "type": "uint256"
                                        }
                                    ],
                                    "internalType": "struct Utils.Route[]",
                                    "name": "routes",
                                    "type": "tuple[]"
                                }
                            ],
                            "internalType": "struct Utils.Path[]",
                            "name": "path",
                            "type": "tuple[]"
                        }
                    ],
                    "internalType": "struct Utils.SellData",
                    "name": "data",
                    "type": "tuple",
                    "@type": "tuple"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0x8da5cb5b",
            "chef:signature": "owner()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "owner",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0x715018a6",
            "chef:signature": "renounceOwnership()",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "renounceOwnership",
            "chef:inputs": [],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0x90d49b9d",
            "chef:signature": "setFeeWallet(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "setFeeWallet",
            "chef:inputs": [
                {
                    "internalType": "address payable",
                    "name": "feeWallet",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0x8c3e9f46",
            "chef:signature": "setPartnerRegistry(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "setPartnerRegistry",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "partnerRegistry",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0xa224c745",
            "chef:signature": "setWhitelistAddress(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "setWhitelistAddress",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "whitelisted",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0xa27e8b6b",
            "chef:signature": "simplBuy(address,address,uint256,uint256,address[],bytes,uint256[],uint256[],address,string,bool)",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "simplBuy",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "fromToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "toToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "fromAmount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "toAmount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address[]",
                    "name": "callees",
                    "type": "address[]",
                    "@type": "address[]"
                },
                {
                    "internalType": "bytes",
                    "name": "exchangeData",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "uint256[]",
                    "name": "startIndexes",
                    "type": "uint256[]",
                    "@type": "uint256[]"
                },
                {
                    "internalType": "uint256[]",
                    "name": "values",
                    "type": "uint256[]",
                    "@type": "uint256[]"
                },
                {
                    "internalType": "address payable",
                    "name": "beneficiary",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "string",
                    "name": "referrer",
                    "type": "string",
                    "@type": "string"
                },
                {
                    "internalType": "bool",
                    "name": "useReduxToken",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0xcfc0afeb",
            "chef:signature": "simpleSwap(address,address,uint256,uint256,uint256,address[],bytes,uint256[],uint256[],address,string,bool)",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "simpleSwap",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "fromToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "toToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "fromAmount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "toAmount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "expectedAmount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address[]",
                    "name": "callees",
                    "type": "address[]",
                    "@type": "address[]"
                },
                {
                    "internalType": "bytes",
                    "name": "exchangeData",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "uint256[]",
                    "name": "startIndexes",
                    "type": "uint256[]",
                    "@type": "uint256[]"
                },
                {
                    "internalType": "uint256[]",
                    "name": "values",
                    "type": "uint256[]",
                    "@type": "uint256[]"
                },
                {
                    "internalType": "address payable",
                    "name": "beneficiary",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "string",
                    "name": "referrer",
                    "type": "string",
                    "@type": "string"
                },
                {
                    "internalType": "bool",
                    "name": "useReduxToken",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "receivedAmount",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0x58b9d179",
            "chef:signature": "swapOnUniswap(uint256,uint256,address[],uint8)",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "swapOnUniswap",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "amountIn",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "amountOutMin",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address[]",
                    "name": "path",
                    "type": "address[]",
                    "@type": "address[]"
                },
                {
                    "internalType": "uint8",
                    "name": "referrer",
                    "type": "uint8",
                    "@type": "uint8"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0x0863b7ac",
            "chef:signature": "swapOnUniswapFork(address,bytes32,uint256,uint256,address[],uint8)",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "swapOnUniswapFork",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "factory",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bytes32",
                    "name": "initCode",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "internalType": "uint256",
                    "name": "amountIn",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "amountOutMin",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address[]",
                    "name": "path",
                    "type": "address[]",
                    "@type": "address[]"
                },
                {
                    "internalType": "uint8",
                    "name": "referrer",
                    "type": "uint8",
                    "@type": "uint8"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0xf2fde38b",
            "chef:signature": "transferOwnership(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "transferOwnership",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0xa64b6e5f",
            "chef:signature": "transferTokens(address,address,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "transferTokens",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "token",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address payable",
                    "name": "destination",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0xe1829cfe",
            "chef:signature": "withdrawAllWETH(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "withdrawAllWETH",
            "chef:inputs": [
                {
                    "internalType": "contract IWETH",
                    "name": "token",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "payable": false,
            "@id": "0xd26c6de946e32c3abb17485cf054c23f3e1d7612753edae48a3dd6a36708f6ac",
            "chef:signature": "0(address,uint256,uint256,uint256,bool)",
            "@type": "chef:Event",
            "evm:stateMutability": "nonpayable",
            "chef:name": "0",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "beneficiary",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "start",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "cliffDuration",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "duration",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "bool",
                    "name": "revocable",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x39983c6d4d174a7aee564f449d4a5c3c7ac9649d72b7793c56901183996f8af6",
            "chef:signature": "TokenVestingRevoked(address)",
            "@type": "chef:Event",
            "chef:name": "TokenVestingRevoked",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "token",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xc7798891864187665ac6dd119286e44ec13f014527aeeb2b8eb3fd413df93179",
            "chef:signature": "TokensReleased(address,uint256)",
            "@type": "chef:Event",
            "chef:name": "TokensReleased",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "token",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x38af3eed",
            "chef:signature": "beneficiary()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "beneficiary",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x13d033c0",
            "chef:signature": "cliff()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "cliff",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x0fb5a6b4",
            "chef:signature": "duration()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "duration",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x8f32d59b",
            "chef:signature": "isOwner()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "isOwner",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0x19165587",
            "chef:signature": "release(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "release",
            "chef:inputs": [
                {
                    "internalType": "contract IERC20",
                    "name": "token",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x9852595c",
            "chef:signature": "released(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "released",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "token",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x872a7810",
            "chef:signature": "revocable()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "revocable",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0x74a8f103",
            "chef:signature": "revoke(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "revoke",
            "chef:inputs": [
                {
                    "internalType": "contract IERC20",
                    "name": "token",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0xfa01dc06",
            "chef:signature": "revoked(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "revoked",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "token",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0xbe9a6555",
            "chef:signature": "start()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "start",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/TokenVesting"
                }
            ]
        },
        {
            "@id": "0x8d5004028f09180abc4210f60fbf14955ac50d24898f80bef2b1efe077e75bd6",
            "chef:signature": "0()",
            "@type": "chef:Event",
            "evm:stateMutability": "nonpayable",
            "chef:name": "0",
            "chef:inputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea26",
            "chef:signature": "AddedOwner(address)",
            "@type": "chef:Event",
            "chef:name": "AddedOwner",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xf2a0eb156472d1440255b0d7c1e19cc07115d1051fe605b0dce69acfec884d9c",
            "chef:signature": "ApproveHash(bytes32,address)",
            "@type": "chef:Event",
            "chef:name": "ApproveHash",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "approvedHash",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x5ac6c46c93c8d0e53714ba3b53db3e7c046da994313d7ed0d192028bc7c228b0",
            "chef:signature": "ChangedFallbackHandler(address)",
            "@type": "chef:Event",
            "chef:name": "ChangedFallbackHandler",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "handler",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x1151116914515bc0891ff9047a6cb32cf902546f83066499bcf8ba33d2353fa2",
            "chef:signature": "ChangedGuard(address)",
            "@type": "chef:Event",
            "chef:name": "ChangedGuard",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "guard",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x610f7ff2b304ae8903c3de74c60c6ab1f7d6226b3f52c5161905bb5ad4039c93",
            "chef:signature": "ChangedThreshold(uint256)",
            "@type": "chef:Event",
            "chef:name": "ChangedThreshold",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "threshold",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xaab4fa2b463f581b2b32cb3b7e3b704b9ce37cc209b5fb4d77e593ace4054276",
            "chef:signature": "DisabledModule(address)",
            "@type": "chef:Event",
            "chef:name": "DisabledModule",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "module",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xecdf3a3effea5783a3c4c2140e677577666428d44ed9d474a0b3a4c9943f8440",
            "chef:signature": "EnabledModule(address)",
            "@type": "chef:Event",
            "chef:name": "EnabledModule",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "module",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x23428b18acfb3ea64b08dc0c1d296ea9c09702c09083ca5272e64d115b687d23",
            "chef:signature": "ExecutionFailure(bytes32,uint256)",
            "@type": "chef:Event",
            "chef:name": "ExecutionFailure",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "txHash",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "payment",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xacd2c8702804128fdb0db2bb49f6d127dd0181c13fd45dbfe16de0930e2bd375",
            "chef:signature": "ExecutionFromModuleFailure(address)",
            "@type": "chef:Event",
            "chef:name": "ExecutionFromModuleFailure",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "module",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x6895c13664aa4f67288b25d7a21d7aaa34916e355fb9b6fae0a139a9085becb8",
            "chef:signature": "ExecutionFromModuleSuccess(address)",
            "@type": "chef:Event",
            "chef:name": "ExecutionFromModuleSuccess",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "module",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x442e715f626346e8c54381002da614f62bee8d27386535b2521ec8540898556e",
            "chef:signature": "ExecutionSuccess(bytes32,uint256)",
            "@type": "chef:Event",
            "chef:name": "ExecutionSuccess",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "txHash",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "payment",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xf8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf",
            "chef:signature": "RemovedOwner(address)",
            "@type": "chef:Event",
            "chef:name": "RemovedOwner",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x3d0ce9bfc3ed7d6862dbb28b2dea94561fe714a1b4d019aa8af39730d1ad7c3d",
            "chef:signature": "SafeReceived(address,uint256)",
            "@type": "chef:Event",
            "chef:name": "SafeReceived",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "sender",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x141df868a6331af528e38c83b7aa03edc19be66e37ae67f9285bf4f8e3c6a1a8",
            "chef:signature": "SafeSetup(address,address[],uint256,address,address)",
            "@type": "chef:Event",
            "chef:name": "SafeSetup",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "initiator",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "address[]",
                    "name": "owners",
                    "type": "address[]",
                    "@type": "address[]"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "threshold",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "initializer",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "fallbackHandler",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xe7f4675038f4f6034dfcbbb24c4dc08e4ebf10eb9d257d3d02c0f38d122ac6e4",
            "chef:signature": "SignMsg(bytes32)",
            "@type": "chef:Event",
            "chef:name": "SignMsg",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "msgHash",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0xffa1ad74",
            "chef:signature": "VERSION()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "VERSION",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string",
                    "@type": "string"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0x0d582f13",
            "chef:signature": "addOwnerWithThreshold(address,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "addOwnerWithThreshold",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_threshold",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0xd4d9bdcd",
            "chef:signature": "approveHash(bytes32)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "approveHash",
            "chef:inputs": [
                {
                    "internalType": "bytes32",
                    "name": "hashToApprove",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0x7d832974",
            "chef:signature": "approvedHashes(address,bytes32)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "approvedHashes",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0x694e80c3",
            "chef:signature": "changeThreshold(uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "changeThreshold",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "_threshold",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0x12fb68e0",
            "chef:signature": "checkNSignatures(bytes32,bytes,bytes,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "checkNSignatures",
            "chef:inputs": [
                {
                    "internalType": "bytes32",
                    "name": "dataHash",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "bytes",
                    "name": "signatures",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "uint256",
                    "name": "requiredSignatures",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0x934f3a11",
            "chef:signature": "checkSignatures(bytes32,bytes,bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "checkSignatures",
            "chef:inputs": [
                {
                    "internalType": "bytes32",
                    "name": "dataHash",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "bytes",
                    "name": "signatures",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0xe009cfde",
            "chef:signature": "disableModule(address,address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "disableModule",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "prevModule",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "module",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0xf698da25",
            "chef:signature": "domainSeparator()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "domainSeparator",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0x610b5925",
            "chef:signature": "enableModule(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "enableModule",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "module",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0xe86637db",
            "chef:signature": "encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "encodeTransactionData",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "enum Enum.Operation",
                    "name": "operation",
                    "type": "uint8",
                    "@type": "uint8"
                },
                {
                    "internalType": "uint256",
                    "name": "safeTxGas",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "baseGas",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "gasPrice",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "gasToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "refundReceiver",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_nonce",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0x6a761202",
            "chef:signature": "execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "execTransaction",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "enum Enum.Operation",
                    "name": "operation",
                    "type": "uint8",
                    "@type": "uint8"
                },
                {
                    "internalType": "uint256",
                    "name": "safeTxGas",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "baseGas",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "gasPrice",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "gasToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address payable",
                    "name": "refundReceiver",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bytes",
                    "name": "signatures",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "success",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0x468721a7",
            "chef:signature": "execTransactionFromModule(address,uint256,bytes,uint8)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "execTransactionFromModule",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "enum Enum.Operation",
                    "name": "operation",
                    "type": "uint8",
                    "@type": "uint8"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "success",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0x5229073f",
            "chef:signature": "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "execTransactionFromModuleReturnData",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "enum Enum.Operation",
                    "name": "operation",
                    "type": "uint8",
                    "@type": "uint8"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "success",
                    "type": "bool",
                    "@type": "bool"
                },
                {
                    "internalType": "bytes",
                    "name": "returnData",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0x3408e470",
            "chef:signature": "getChainId()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getChainId",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0xcc2f8452",
            "chef:signature": "getModulesPaginated(address,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getModulesPaginated",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "start",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "pageSize",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "address[]",
                    "name": "array",
                    "type": "address[]",
                    "@type": "address[]"
                },
                {
                    "internalType": "address",
                    "name": "next",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0xa0e67e2b",
            "chef:signature": "getOwners()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getOwners",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address[]",
                    "name": "",
                    "type": "address[]",
                    "@type": "address[]"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0x5624b25b",
            "chef:signature": "getStorageAt(uint256,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getStorageAt",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "offset",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "length",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0xe75235b8",
            "chef:signature": "getThreshold()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getThreshold",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0xd8d11f78",
            "chef:signature": "getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getTransactionHash",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "enum Enum.Operation",
                    "name": "operation",
                    "type": "uint8",
                    "@type": "uint8"
                },
                {
                    "internalType": "uint256",
                    "name": "safeTxGas",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "baseGas",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "gasPrice",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "gasToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "refundReceiver",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_nonce",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0x2d9ad53d",
            "chef:signature": "isModuleEnabled(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "isModuleEnabled",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "module",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0x2f54bf6e",
            "chef:signature": "isOwner(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "isOwner",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0xaffed0e0",
            "chef:signature": "nonce()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "nonce",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0xf8dc5dd9",
            "chef:signature": "removeOwner(address,address,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "removeOwner",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "prevOwner",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_threshold",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0xc4ca3a9c",
            "chef:signature": "requiredTxGas(address,uint256,bytes,uint8)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "requiredTxGas",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "enum Enum.Operation",
                    "name": "operation",
                    "type": "uint8",
                    "@type": "uint8"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0xf08a0323",
            "chef:signature": "setFallbackHandler(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "setFallbackHandler",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "handler",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0xe19a9dd9",
            "chef:signature": "setGuard(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "setGuard",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "guard",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0xb63e800d",
            "chef:signature": "setup(address[],uint256,address,bytes,address,address,uint256,address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "setup",
            "chef:inputs": [
                {
                    "internalType": "address[]",
                    "name": "_owners",
                    "type": "address[]",
                    "@type": "address[]"
                },
                {
                    "internalType": "uint256",
                    "name": "_threshold",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "address",
                    "name": "fallbackHandler",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "paymentToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "payment",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address payable",
                    "name": "paymentReceiver",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0x5ae6bd37",
            "chef:signature": "signedMessages(bytes32)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "signedMessages",
            "chef:inputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0xb4faba09",
            "chef:signature": "simulateAndRevert(address,bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "simulateAndRevert",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "targetContract",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bytes",
                    "name": "calldataPayload",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0xe318b52b",
            "chef:signature": "swapOwner(address,address,address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "swapOwner",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "prevOwner",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "oldOwner",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/GnosisSafe"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0x3f4ba83a",
            "chef:signature": "unpause()",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "unpause",
            "chef:inputs": [],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x5c975abb",
            "chef:signature": "paused()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "paused",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0x8456cb59",
            "chef:signature": "pause()",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "pause",
            "chef:inputs": [],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "constant": false,
            "payable": true,
            "@id": "0xc5f0b909",
            "chef:signature": "multiSwap(address,address,uint256,uint256,uint256,(address,(address,address,uint256,bytes,uint256)[])[],uint256,address,uint256,string)",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "multiSwap",
            "chef:inputs": [
                {
                    "internalType": "contract IERC20",
                    "name": "fromToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "contract IERC20",
                    "name": "toToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "fromAmount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "toAmount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "expectedAmount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "components": [
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "components": [
                                {
                                    "internalType": "address payable",
                                    "name": "exchange",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "targetExchange",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "percent",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "payload",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "networkFee",
                                    "type": "uint256"
                                }
                            ],
                            "internalType": "struct Utils.Route[]",
                            "name": "routes",
                            "type": "tuple[]"
                        }
                    ],
                    "internalType": "struct Utils.Path[]",
                    "name": "path",
                    "type": "tuple[]",
                    "@type": "tuple[]"
                },
                {
                    "internalType": "uint256",
                    "name": "mintPrice",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address payable",
                    "name": "beneficiary",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "donationPercentage",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "string",
                    "name": "referrer",
                    "type": "string",
                    "@type": "string"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0xd591d9d2",
            "chef:signature": "ownerTransferTokens(address,address,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "ownerTransferTokens",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "token",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address payable",
                    "name": "destination",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0xf6a2b5a2",
            "chef:signature": "changeGSTHolder(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "changeGSTHolder",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "gstHolder",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "payable": false,
            "@id": "0x0dbc8783faf7023c8a1cd11d7a71c71960bc79df952f092a0dae0cecdfc99499",
            "chef:signature": "0(address,address,address,address,address)",
            "@type": "chef:Event",
            "evm:stateMutability": "nonpayable",
            "chef:name": "0",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "whitelist",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "gasToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "partnerRegistry",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address payable",
                    "name": "feeWallet",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "gstHolder",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e752",
            "chef:signature": "Paused()",
            "@type": "chef:Event",
            "chef:name": "Paused",
            "chef:inputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d16933",
            "chef:signature": "Unpaused()",
            "@type": "chef:Event",
            "chef:name": "Unpaused",
            "chef:inputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x5d8bc849764969eb1bcc6d0a2f55999d0167c1ccec240a4f39cf664ca9c4148e",
            "chef:signature": "Donation(address,uint256)",
            "@type": "chef:Event",
            "chef:name": "Donation",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "receiver",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "donationPercentage",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x441d560bf57e907ad7d6cbd99673ee6b0a5d63d5017b5e231a0c04cd2e7ba432",
            "chef:signature": "Bought(address,address,address,address,uint256,uint256,uint256,string)",
            "@type": "chef:Event",
            "chef:name": "Bought",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "initiator",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "beneficiary",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "srcToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "destToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "srcAmount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "receivedAmount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "expectedAmount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "referrer",
                    "type": "string",
                    "@type": "string"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0xbb2a349b",
            "chef:signature": "buy(address,address,uint256,uint256,uint256,(address,address,uint256,uint256,bytes,uint256)[],uint256,address,uint256,string)",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "buy",
            "chef:inputs": [
                {
                    "internalType": "contract IERC20",
                    "name": "fromToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "contract IERC20",
                    "name": "toToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "fromAmount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "toAmount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "expectedAmount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "components": [
                        {
                            "internalType": "address payable",
                            "name": "exchange",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "targetExchange",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "fromAmount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "toAmount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "payload",
                            "type": "bytes"
                        },
                        {
                            "internalType": "uint256",
                            "name": "networkFee",
                            "type": "uint256"
                        }
                    ],
                    "internalType": "struct Utils.BuyRoute[]",
                    "name": "route",
                    "type": "tuple[]",
                    "@type": "tuple[]"
                },
                {
                    "internalType": "uint256",
                    "name": "mintPrice",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address payable",
                    "name": "beneficiary",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "donationBasisPoints",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "string",
                    "name": "referrer",
                    "type": "string",
                    "@type": "string"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0xcbd1603e",
            "chef:signature": "multiSwap(address,address,uint256,uint256,uint256,(address,uint256,(address,address,uint256,bytes,uint256)[])[],uint256,address,uint256,string)",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "multiSwap",
            "chef:inputs": [
                {
                    "internalType": "contract IERC20",
                    "name": "fromToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "contract IERC20",
                    "name": "toToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "fromAmount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "toAmount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "expectedAmount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "components": [
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "totalNetworkFee",
                            "type": "uint256"
                        },
                        {
                            "components": [
                                {
                                    "internalType": "address payable",
                                    "name": "exchange",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "targetExchange",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "percent",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "payload",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "networkFee",
                                    "type": "uint256"
                                }
                            ],
                            "internalType": "struct Utils.Route[]",
                            "name": "routes",
                            "type": "tuple[]"
                        }
                    ],
                    "internalType": "struct Utils.Path[]",
                    "name": "path",
                    "type": "tuple[]",
                    "@type": "tuple[]"
                },
                {
                    "internalType": "uint256",
                    "name": "mintPrice",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address payable",
                    "name": "beneficiary",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "donationBasisPoints",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "string",
                    "name": "referrer",
                    "type": "string",
                    "@type": "string"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "payable": false,
            "@id": "0xee3b5c9a779a6cdfba7317e181cb6efe8b42ac09d64ab387bbb36e8228c2594b",
            "chef:signature": "0(address,address,uint256)",
            "@type": "chef:Event",
            "evm:stateMutability": "nonpayable",
            "chef:name": "0",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "minter_",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "mintingAllowedAfter_",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
            "chef:signature": "Approval(address,address,uint256)",
            "@type": "chef:Event",
            "chef:name": "Approval",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f",
            "chef:signature": "DelegateChanged(address,address,address)",
            "@type": "chef:Event",
            "chef:name": "DelegateChanged",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "delegator",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "fromDelegate",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "toDelegate",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724",
            "chef:signature": "DelegateVotesChanged(address,uint256,uint256)",
            "@type": "chef:Event",
            "chef:name": "DelegateVotesChanged",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "delegate",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "previousBalance",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "newBalance",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x3b0007eb941cf645526cbb3a4fdaecda9d28ce4843167d9263b536a1f1edc0f6",
            "chef:signature": "MinterChanged(address,address)",
            "@type": "chef:Event",
            "chef:name": "MinterChanged",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "minter",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "newMinter",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "chef:signature": "Transfer(address,address,uint256)",
            "@type": "chef:Event",
            "chef:name": "Transfer",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0xe7a324dc",
            "chef:signature": "DELEGATION_TYPEHASH()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "DELEGATION_TYPEHASH",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x20606b70",
            "chef:signature": "DOMAIN_TYPEHASH()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "DOMAIN_TYPEHASH",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x30adf81f",
            "chef:signature": "PERMIT_TYPEHASH()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "PERMIT_TYPEHASH",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0xdd62ed3e",
            "chef:signature": "allowance(address,address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "allowance",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0x095ea7b3",
            "chef:signature": "approve(address,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "approve",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "rawAmount",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x70a08231",
            "chef:signature": "balanceOf(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "balanceOf",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0xf1127ed8",
            "chef:signature": "checkpoints(address,uint32)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "checkpoints",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint32",
                    "name": "",
                    "type": "uint32",
                    "@type": "uint32"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint32",
                    "name": "fromBlock",
                    "type": "uint32",
                    "@type": "uint32"
                },
                {
                    "internalType": "uint96",
                    "name": "votes",
                    "type": "uint96",
                    "@type": "uint96"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x313ce567",
            "chef:signature": "decimals()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "decimals",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8",
                    "@type": "uint8"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0x5c19a95c",
            "chef:signature": "delegate(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "delegate",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "delegatee",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0xc3cda520",
            "chef:signature": "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "delegateBySig",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "delegatee",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "nonce",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "expiry",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint8",
                    "name": "v",
                    "type": "uint8",
                    "@type": "uint8"
                },
                {
                    "internalType": "bytes32",
                    "name": "r",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "internalType": "bytes32",
                    "name": "s",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x587cde1e",
            "chef:signature": "delegates(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "delegates",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0xb4b5ea57",
            "chef:signature": "getCurrentVotes(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getCurrentVotes",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint96",
                    "name": "",
                    "type": "uint96",
                    "@type": "uint96"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x782d6fe1",
            "chef:signature": "getPriorVotes(address,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getPriorVotes",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "blockNumber",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint96",
                    "name": "",
                    "type": "uint96",
                    "@type": "uint96"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x5c11d62f",
            "chef:signature": "minimumTimeBetweenMints()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "minimumTimeBetweenMints",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint32",
                    "name": "",
                    "type": "uint32",
                    "@type": "uint32"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0x40c10f19",
            "chef:signature": "mint(address,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "mint",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "dst",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "rawAmount",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x76c71ca1",
            "chef:signature": "mintCap()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "mintCap",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8",
                    "@type": "uint8"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x07546172",
            "chef:signature": "minter()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "minter",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x30b36cef",
            "chef:signature": "mintingAllowedAfter()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "mintingAllowedAfter",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x06fdde03",
            "chef:signature": "name()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "name",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string",
                    "@type": "string"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x7ecebe00",
            "chef:signature": "nonces(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "nonces",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x6fcfff45",
            "chef:signature": "numCheckpoints(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "numCheckpoints",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint32",
                    "name": "",
                    "type": "uint32",
                    "@type": "uint32"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0xd505accf",
            "chef:signature": "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "permit",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "rawAmount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "deadline",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint8",
                    "name": "v",
                    "type": "uint8",
                    "@type": "uint8"
                },
                {
                    "internalType": "bytes32",
                    "name": "r",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "internalType": "bytes32",
                    "name": "s",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0xfca3b5aa",
            "chef:signature": "setMinter(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "setMinter",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "minter_",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x95d89b41",
            "chef:signature": "symbol()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "symbol",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string",
                    "@type": "string"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x18160ddd",
            "chef:signature": "totalSupply()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "totalSupply",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0xa9059cbb",
            "chef:signature": "transfer(address,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "transfer",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "dst",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "rawAmount",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0x23b872dd",
            "chef:signature": "transferFrom(address,address,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "transferFrom",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "src",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "dst",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "rawAmount",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/PSP"
                }
            ]
        },
        {
            "@id": "0x46546cfc",
            "chef:signature": "buy((address,address,uint256,uint256,address,string,(address,address,uint256,uint256,bytes,uint256)[]))",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "buy",
            "chef:inputs": [
                {
                    "components": [
                        {
                            "internalType": "contract IERC20",
                            "name": "fromToken",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IERC20",
                            "name": "toToken",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "fromAmount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "toAmount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address payable",
                            "name": "beneficiary",
                            "type": "address"
                        },
                        {
                            "internalType": "string",
                            "name": "referrer",
                            "type": "string"
                        },
                        {
                            "components": [
                                {
                                    "internalType": "address payable",
                                    "name": "exchange",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "targetExchange",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "fromAmount",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "toAmount",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "payload",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "networkFee",
                                    "type": "uint256"
                                }
                            ],
                            "internalType": "struct Utils.BuyRoute[]",
                            "name": "route",
                            "type": "tuple[]"
                        }
                    ],
                    "internalType": "struct Utils.BuyData",
                    "name": "data",
                    "type": "tuple",
                    "@type": "tuple"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0xe7b82a12",
            "chef:signature": "getGasMintPrice()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getGasMintPrice",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0xda8567c8",
            "chef:signature": "multiSwap((address,address,uint256,uint256,uint256,address,string,(address,uint256,(address,address,uint256,bytes,uint256)[])[]))",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "multiSwap",
            "chef:inputs": [
                {
                    "components": [
                        {
                            "internalType": "contract IERC20",
                            "name": "fromToken",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IERC20",
                            "name": "toToken",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "fromAmount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "toAmount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "expectedAmount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address payable",
                            "name": "beneficiary",
                            "type": "address"
                        },
                        {
                            "internalType": "string",
                            "name": "referrer",
                            "type": "string"
                        },
                        {
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "to",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "totalNetworkFee",
                                    "type": "uint256"
                                },
                                {
                                    "components": [
                                        {
                                            "internalType": "address payable",
                                            "name": "exchange",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "targetExchange",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "percent",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "bytes",
                                            "name": "payload",
                                            "type": "bytes"
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "networkFee",
                                            "type": "uint256"
                                        }
                                    ],
                                    "internalType": "struct Utils.Route[]",
                                    "name": "routes",
                                    "type": "tuple[]"
                                }
                            ],
                            "internalType": "struct Utils.Path[]",
                            "name": "path",
                            "type": "tuple[]"
                        }
                    ],
                    "internalType": "struct Utils.SellData",
                    "name": "data",
                    "type": "tuple",
                    "@type": "tuple"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0x50370794",
            "chef:signature": "setGasMintPrice(uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "setGasMintPrice",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "gasMintPrice",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0xae6fba44",
            "chef:signature": "simplBuy(address,address,uint256,uint256,address[],bytes,uint256[],uint256[],address,string)",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "simplBuy",
            "chef:inputs": [
                {
                    "internalType": "contract IERC20",
                    "name": "fromToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "contract IERC20",
                    "name": "toToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "fromAmount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "toAmount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address[]",
                    "name": "callees",
                    "type": "address[]",
                    "@type": "address[]"
                },
                {
                    "internalType": "bytes",
                    "name": "exchangeData",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "uint256[]",
                    "name": "startIndexes",
                    "type": "uint256[]",
                    "@type": "uint256[]"
                },
                {
                    "internalType": "uint256[]",
                    "name": "values",
                    "type": "uint256[]",
                    "@type": "uint256[]"
                },
                {
                    "internalType": "address payable",
                    "name": "beneficiary",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "string",
                    "name": "referrer",
                    "type": "string",
                    "@type": "string"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        },
        {
            "@id": "0x1610ca95",
            "chef:signature": "simpleSwap(address,address,uint256,uint256,uint256,address[],bytes,uint256[],uint256[],address,string)",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "simpleSwap",
            "chef:inputs": [
                {
                    "internalType": "contract IERC20",
                    "name": "fromToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "contract IERC20",
                    "name": "toToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "fromAmount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "toAmount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "expectedAmount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address[]",
                    "name": "callees",
                    "type": "address[]",
                    "@type": "address[]"
                },
                {
                    "internalType": "bytes",
                    "name": "exchangeData",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "uint256[]",
                    "name": "startIndexes",
                    "type": "uint256[]",
                    "@type": "uint256[]"
                },
                {
                    "internalType": "uint256[]",
                    "name": "values",
                    "type": "uint256[]",
                    "@type": "uint256[]"
                },
                {
                    "internalType": "address payable",
                    "name": "beneficiary",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "string",
                    "name": "referrer",
                    "type": "string",
                    "@type": "string"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/defi/paraswap/AugustusSwapper"
                }
            ]
        }
    ]
}