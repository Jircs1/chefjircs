{
    "@context": {
        "@vocab": "http://colorfulnotion.com/vocab",
        "chef": "http://colorfulnotion.com/chef/",
        "evm": "http://colorfulnotion.com/"
    },
    "@id": "chef:awesome-web3/ethereum/arbitrum",
    "@type": "chef:Project",
    "chef:name": "arbitrum",
    "chef:dataset": "ethereum",
    "chef:contracts": [
        {
            "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox",
            "@type": "chef:Contract",
            "chef:contractName": "Inbox",
            "chef:Deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox",
                    "evm:chainID": 1,
                    "evm:address": "0x048cc108763de75e080ad717bd284003aa49ea15"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox",
                    "evm:chainID": 1,
                    "evm:address": "0xc4448b71118c9071bcb9734a0eac55d18a153949"
                }
            ]
        },
        {
            "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway",
            "@type": "chef:Contract",
            "chef:contractName": "L1ERC20Gateway",
            "chef:Deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway",
                    "evm:chainID": 1,
                    "evm:address": "0x0acb04878b3675ef40b2e9392622ce3c1e9cc99e"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway",
                    "evm:chainID": 1,
                    "evm:address": "0xa3a7b6f88361f48403514059f1f16c8e78d60eec"
                }
            ]
        },
        {
            "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe",
            "@type": "chef:Contract",
            "chef:contractName": "GnosisSafe",
            "chef:Deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe",
                    "evm:chainID": 1,
                    "evm:address": "0x0da0c3e52c977ed3cbc641ff02dd271c3ed55afe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe",
                    "evm:chainID": 1,
                    "evm:address": "0x4971dd016127f390a3ef6b956ff944d0e2e1e462"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe",
                    "evm:chainID": 1,
                    "evm:address": "0x54396b93c10c685a21c8b5610c15f82a54c9c22e"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe",
                    "evm:chainID": 1,
                    "evm:address": "0x849d52316331967b6ff1198e5e32a0eb168d039d"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe",
                    "evm:chainID": 1,
                    "evm:address": "0xc234e41ae2cb00311956aa7109fc801ae8c80941"
                }
            ]
        },
        {
            "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ProxyAdmin",
            "@type": "chef:Contract",
            "chef:contractName": "ProxyAdmin",
            "chef:Deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ProxyAdmin",
                    "evm:chainID": 1,
                    "evm:address": "0x171a2624302775ef943f4f62e76fd22a6813d7c4"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ProxyAdmin",
                    "evm:chainID": 1,
                    "evm:address": "0x9ad46fac0cf7f790e5be05a0f15223935a0c0ada"
                }
            ]
        },
        {
            "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OneStepProverMath",
            "@type": "chef:Contract",
            "chef:contractName": "OneStepProverMath",
            "chef:Deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OneStepProverMath",
                    "evm:chainID": 1,
                    "evm:address": "0x1efb116ebc38ce895eb2e5e009234e0e0836f2f5"
                }
            ]
        },
        {
            "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox",
            "@type": "chef:Contract",
            "chef:contractName": "SequencerInbox",
            "chef:Deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox",
                    "evm:chainID": 1,
                    "evm:address": "0x211e1c4c7f1bf5351ac850ed10fd68cffcf6c21b"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox",
                    "evm:chainID": 1,
                    "evm:address": "0x9685e7281fb1507b6f141758d80b08752faf0c43"
                }
            ]
        },
        {
            "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ValidatorUtils",
            "@type": "chef:Contract",
            "chef:contractName": "ValidatorUtils",
            "chef:Deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ValidatorUtils",
                    "evm:chainID": 1,
                    "evm:address": "0x2b36f23ce0babd57553b26da4c7a0585bac65dc1"
                }
            ]
        },
        {
            "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge",
            "@type": "chef:Contract",
            "chef:contractName": "Bridge",
            "chef:Deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge",
                    "evm:chainID": 1,
                    "evm:address": "0x2f06e43d850ac75926fa2866e40139475b58cb16"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge",
                    "evm:chainID": 1,
                    "evm:address": "0x8315177ab297ba92a06054ce80a67ed4dbd7ed3a"
                }
            ]
        },
        {
            "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter",
            "@type": "chef:Contract",
            "chef:contractName": "L1GatewayRouter",
            "chef:Deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter",
                    "evm:chainID": 1,
                    "evm:address": "0x62285266b5ec3d5b8867c84b807b79b2c13892ec"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter",
                    "evm:chainID": 1,
                    "evm:address": "0x72ce9c846789fdb6fc1f34ac4ad25dd9ef7031ef"
                }
            ]
        },
        {
            "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup",
            "@type": "chef:Contract",
            "chef:contractName": "Rollup",
            "chef:Deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup",
                    "evm:chainID": 1,
                    "evm:address": "0x637e1cd58ad3f0071cecb281395e1823a96a553f"
                }
            ]
        },
        {
            "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisToken",
            "@type": "chef:Contract",
            "chef:contractName": "GnosisToken",
            "chef:Deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisToken",
                    "evm:chainID": 1,
                    "evm:address": "0x6810e776880c02933d47db1b9fc05908e5386b96"
                }
            ]
        },
        {
            "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Outbox",
            "@type": "chef:Contract",
            "chef:contractName": "Outbox",
            "chef:Deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Outbox",
                    "evm:chainID": 1,
                    "evm:address": "0x760723cd2e632826c38fef8cd438a4cc7e7e1a40"
                }
            ]
        },
        {
            "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OneStepProverMemory",
            "@type": "chef:Contract",
            "chef:contractName": "OneStepProverMemory",
            "chef:Deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OneStepProverMemory",
                    "evm:chainID": 1,
                    "evm:address": "0x7a6c0503107858f82a790e481024134092e19979"
                }
            ]
        },
        {
            "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OneStepProofEntry",
            "@type": "chef:Contract",
            "chef:contractName": "OneStepProofEntry",
            "chef:Deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OneStepProofEntry",
                    "evm:chainID": 1,
                    "evm:address": "0x7adca86896c4220f19b2f7f9746e7a99e57b0fc5"
                }
            ]
        },
        {
            "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OneStepProver0",
            "@type": "chef:Contract",
            "chef:contractName": "OneStepProver0",
            "chef:Deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OneStepProver0",
                    "evm:chainID": 1,
                    "evm:address": "0x8323b58c522690e6afae94044825f0c79a93d236"
                }
            ]
        },
        {
            "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/BridgeUtils",
            "@type": "chef:Contract",
            "chef:contractName": "BridgeUtils",
            "chef:Deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/BridgeUtils",
                    "evm:chainID": 1,
                    "evm:address": "0x84efa170dc6d521495d7942e372b8e4b2fb918ec"
                }
            ]
        },
        {
            "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway",
            "@type": "chef:Contract",
            "chef:contractName": "L1CustomGateway",
            "chef:Deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway",
                    "evm:chainID": 1,
                    "evm:address": "0x98659bdffa4fef82cd37771cdbff3ddda21ee8e9"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway",
                    "evm:chainID": 1,
                    "evm:address": "0xcee284f754e854890e311e3280b767f80797180d"
                }
            ]
        },
        {
            "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OneStepProverHostIo",
            "@type": "chef:Contract",
            "chef:contractName": "OneStepProverHostIo",
            "chef:Deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OneStepProverHostIo",
                    "evm:chainID": 1,
                    "evm:address": "0x9cbc3f14a57ce6ead0e770f528e2f1e8b8c37613"
                }
            ]
        },
        {
            "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ChallengeManager",
            "@type": "chef:Contract",
            "chef:contractName": "ChallengeManager",
            "chef:Deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ChallengeManager",
                    "evm:chainID": 1,
                    "evm:address": "0xa59075221b50c598aed0eae0bb9869639513af0d"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ChallengeManager",
                    "evm:chainID": 1,
                    "evm:address": "0xe5896783a2f463446e1f624e64aa6836be4c6f58"
                }
            ]
        },
        {
            "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/RollupEventBridge",
            "@type": "chef:Contract",
            "chef:contractName": "RollupEventBridge",
            "chef:Deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/RollupEventBridge",
                    "evm:chainID": 1,
                    "evm:address": "0xb872ea300edba3872873fa1aa33db897c4d2cb66"
                }
            ]
        },
        {
            "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OldOutbox",
            "@type": "chef:Contract",
            "chef:contractName": "OldOutbox",
            "chef:Deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OldOutbox",
                    "evm:chainID": 1,
                    "evm:address": "0xb91f4be773f5a1b9b0dc1085663b3535a6ebeee2"
                }
            ]
        },
        {
            "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1DaiGateway",
            "@type": "chef:Contract",
            "chef:contractName": "L1DaiGateway",
            "chef:Deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1DaiGateway",
                    "evm:chainID": 1,
                    "evm:address": "0xd3b5b60020504bc3489d6949d545893982ba3011"
                }
            ]
        },
        {
            "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1WethGateway",
            "@type": "chef:Contract",
            "chef:contractName": "L1WethGateway",
            "chef:Deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1WethGateway",
                    "evm:chainID": 1,
                    "evm:address": "0xd92023e9d9911199a6711321d1277285e6d4e2db"
                }
            ]
        },
        {
            "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ValidatorWalletCreator",
            "@type": "chef:Contract",
            "chef:contractName": "ValidatorWalletCreator",
            "chef:Deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ValidatorWalletCreator",
                    "evm:chainID": 1,
                    "evm:address": "0xe17d8fa6bc62590f840c5dd35f300f77d55cc178"
                }
            ]
        },
        {
            "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Disbursement",
            "@type": "chef:Contract",
            "chef:contractName": "Disbursement",
            "chef:Deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Disbursement",
                    "evm:chainID": 1,
                    "evm:address": "0xec83f750adfe0e52a8b0dba6eeb6be5ba0bee535"
                }
            ]
        },
        {
            "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/RollupAdminLogic",
            "@type": "chef:Contract",
            "chef:contractName": "RollupAdminLogic",
            "chef:Deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/RollupAdminLogic",
                    "evm:chainID": 1,
                    "evm:address": "0xfb209827c58283535b744575e11953dcc4bead88"
                }
            ]
        }
    ],
    "chef:abi": [
        {
            "anonymous": false,
            "@id": "0xff64905f73a67fb594e0f940a8075a860db489ad991e032f48c81123eb52d60b",
            "chef:signature": "InboxMessageDelivered(uint256,bytes)",
            "@type": "chef:Event",
            "chef:name": "InboxMessageDelivered",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "messageNum",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/RollupEventBridge"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xab532385be8f1005a4b6ba8fa20a2245facb346134ac739fe9a5198dc1580b9c",
            "chef:signature": "InboxMessageDeliveredFromOrigin(uint256)",
            "@type": "chef:Event",
            "chef:name": "InboxMessageDeliveredFromOrigin",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "messageNum",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/RollupEventBridge"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x9077d36bc00859b5c3f320310707208543dd35092cb0a0fe117d0c6a558b148b",
            "chef:signature": "PauseToggled(bool)",
            "@type": "chef:Event",
            "chef:name": "PauseToggled",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "enabled",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xab1ea65fd25ce96d303e895d1bd43edddb89841544a3705d3e61fc947a5fc25b",
            "chef:signature": "RewriteToggled(bool)",
            "@type": "chef:Event",
            "chef:name": "RewriteToggled",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "enabled",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x37389c47920d5cc3229678a0205d0455002c07541a4139ebdce91ac227465777",
            "chef:signature": "WhitelistSourceUpdated(address)",
            "@type": "chef:Event",
            "chef:name": "WhitelistSourceUpdated",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "newSource",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                }
            ]
        },
        {
            "@id": "0xe78cea92",
            "chef:signature": "bridge()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "bridge",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "contract IBridge",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Outbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OldOutbox"
                }
            ]
        },
        {
            "@id": "0x679b6ded",
            "chef:signature": "createRetryableTicket(address,uint256,uint256,address,address,uint256,uint256,bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "createRetryableTicket",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "destAddr",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "l2CallValue",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "maxSubmissionCost",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "excessFeeRefundAddress",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "callValueRefundAddress",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "maxGas",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "gasPriceBid",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                }
            ]
        },
        {
            "@id": "0x1b871c8d",
            "chef:signature": "createRetryableTicketNoRefundAliasRewrite(address,uint256,uint256,address,address,uint256,uint256,bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "createRetryableTicketNoRefundAliasRewrite",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "destAddr",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "l2CallValue",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "maxSubmissionCost",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "excessFeeRefundAddress",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "callValueRefundAddress",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "maxGas",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "gasPriceBid",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                }
            ]
        },
        {
            "@id": "0x0f4d14e9",
            "chef:signature": "depositEth(uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "depositEth",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "maxSubmissionCost",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                }
            ]
        },
        {
            "@id": "0x485cc955",
            "chef:signature": "initialize(address,address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "initialize",
            "chef:inputs": [
                {
                    "internalType": "contract IBridge",
                    "name": "_bridge",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_whitelist",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Outbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/RollupEventBridge"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OldOutbox"
                }
            ]
        },
        {
            "@id": "0xb4d9ec44",
            "chef:signature": "isCreateRetryablePaused()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "isCreateRetryablePaused",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                }
            ]
        },
        {
            "@id": "0x6f791d29",
            "chef:signature": "isMaster()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "isMaster",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Outbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/RollupEventBridge"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OldOutbox"
                }
            ]
        },
        {
            "@id": "0x2b40609a",
            "chef:signature": "pauseCreateRetryables()",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "pauseCreateRetryables",
            "chef:inputs": [],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                }
            ]
        },
        {
            "@id": "0x8a631aa6",
            "chef:signature": "sendContractTransaction(uint256,uint256,address,uint256,bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "sendContractTransaction",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "maxGas",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "gasPriceBid",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "destAddr",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                }
            ]
        },
        {
            "@id": "0x5e916758",
            "chef:signature": "sendL1FundedContractTransaction(uint256,uint256,address,bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "sendL1FundedContractTransaction",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "maxGas",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "gasPriceBid",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "destAddr",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                }
            ]
        },
        {
            "@id": "0x67ef3ab8",
            "chef:signature": "sendL1FundedUnsignedTransaction(uint256,uint256,uint256,address,bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "sendL1FundedUnsignedTransaction",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "maxGas",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "gasPriceBid",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "nonce",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "destAddr",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                }
            ]
        },
        {
            "@id": "0xb75436bb",
            "chef:signature": "sendL2Message(bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "sendL2Message",
            "chef:inputs": [
                {
                    "internalType": "bytes",
                    "name": "messageData",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                }
            ]
        },
        {
            "@id": "0x1fe927cf",
            "chef:signature": "sendL2MessageFromOrigin(bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "sendL2MessageFromOrigin",
            "chef:inputs": [
                {
                    "internalType": "bytes",
                    "name": "messageData",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                }
            ]
        },
        {
            "@id": "0x5075788b",
            "chef:signature": "sendUnsignedTransaction(uint256,uint256,uint256,address,uint256,bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "sendUnsignedTransaction",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "maxGas",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "gasPriceBid",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "nonce",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "destAddr",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                }
            ]
        },
        {
            "@id": "0xfdebb9b3",
            "chef:signature": "shouldRewriteSender()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "shouldRewriteSender",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                }
            ]
        },
        {
            "@id": "0x7ae8d8b3",
            "chef:signature": "startRewriteAddress()",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "startRewriteAddress",
            "chef:inputs": [],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                }
            ]
        },
        {
            "@id": "0x794cfd51",
            "chef:signature": "stopRewriteAddress()",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "stopRewriteAddress",
            "chef:inputs": [],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                }
            ]
        },
        {
            "@id": "0x9fe12da5",
            "chef:signature": "unpauseCreateRetryables()",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "unpauseCreateRetryables",
            "chef:inputs": [],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                }
            ]
        },
        {
            "@id": "0x47466f98",
            "chef:signature": "updateWhitelistSource(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "updateWhitelistSource",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "newSource",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                }
            ]
        },
        {
            "@id": "0x93e59dc1",
            "chef:signature": "whitelist()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "whitelist",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xb8910b9960c443aac3240b98585384e3a6f109fbf6969e264c3f183d69aba7e1",
            "chef:signature": "DepositInitiated(address,address,address,uint256,uint256)",
            "@type": "chef:Event",
            "chef:name": "DepositInitiated",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "l1Token",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "_from",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "_to",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "_sequenceNumber",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "_amount",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1DaiGateway"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xc1d1490cf25c3b40d600dfb27c7680340ed1ab901b7e8f3551280968a3b372b0",
            "chef:signature": "TxToL2(address,address,uint256,bytes)",
            "@type": "chef:Event",
            "chef:name": "TxToL2",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "_from",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "_to",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "_seqNum",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "bytes",
                    "name": "_data",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1DaiGateway"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x56735ccb9dc7d2222ce4177fc3aea44c33882e2a2c73e0fb1c6b93c9c13a04d4",
            "chef:signature": "WithdrawRedirected(address,address,uint256,bytes,bytes,bool)",
            "@type": "chef:Event",
            "chef:name": "WithdrawRedirected",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "exitNum",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "bytes",
                    "name": "newData",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "indexed": false,
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "madeExternalCall",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x891afe029c75c4f8c5855fc3480598bc5a53739344f6ae575bdb7ea2a79f56b3",
            "chef:signature": "WithdrawalFinalized(address,address,address,uint256,uint256)",
            "@type": "chef:Event",
            "chef:name": "WithdrawalFinalized",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "l1Token",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "_from",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "_to",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "_exitNum",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "_amount",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1DaiGateway"
                }
            ]
        },
        {
            "@id": "0xa7e28d48",
            "chef:signature": "calculateL2TokenAddress(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "calculateL2TokenAddress",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "l1ERC20",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1DaiGateway"
                }
            ]
        },
        {
            "@id": "0x97881f8d",
            "chef:signature": "cloneableProxyHash()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "cloneableProxyHash",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway"
                }
            ]
        },
        {
            "@id": "0x2db09c1c",
            "chef:signature": "counterpartGateway()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "counterpartGateway",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1DaiGateway"
                }
            ]
        },
        {
            "@id": "0x020a6058",
            "chef:signature": "encodeWithdrawal(uint256,address)",
            "@type": "chef:Function",
            "evm:stateMutability": "pure",
            "chef:name": "encodeWithdrawal",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "_exitNum",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "_initialDestination",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                }
            ]
        },
        {
            "@id": "0x2e567b36",
            "chef:signature": "finalizeInboundTransfer(address,address,address,uint256,bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "finalizeInboundTransfer",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "_token",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_from",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_to",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_amount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "_data",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1DaiGateway"
                }
            ]
        },
        {
            "@id": "0xf68a9082",
            "chef:signature": "getExternalCall(uint256,address,bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getExternalCall",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "_exitNum",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "_initialDestination",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bytes",
                    "name": "_initialData",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "target",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                }
            ]
        },
        {
            "@id": "0xa0c76a96",
            "chef:signature": "getOutboundCalldata(address,address,address,uint256,bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getOutboundCalldata",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "_token",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_from",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_to",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_amount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "_data",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bytes",
                    "name": "outboundCalldata",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1DaiGateway"
                }
            ]
        },
        {
            "@id": "0xfb0e722b",
            "chef:signature": "inbox()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "inbox",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1DaiGateway"
                }
            ]
        },
        {
            "@id": "0xa01893bf",
            "chef:signature": "initialize(address,address,address,bytes32,address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "initialize",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "_l2Counterpart",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_router",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_inbox",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bytes32",
                    "name": "_cloneableProxyHash",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "internalType": "address",
                    "name": "_l2BeaconProxyFactory",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway"
                }
            ]
        },
        {
            "@id": "0x70fc045f",
            "chef:signature": "l2BeaconProxyFactory()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "l2BeaconProxyFactory",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway"
                }
            ]
        },
        {
            "@id": "0xd2ce7d65",
            "chef:signature": "outboundTransfer(address,address,uint256,uint256,uint256,bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "outboundTransfer",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "_l1Token",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_to",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_amount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_maxGas",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_gasPriceBid",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "_data",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bytes",
                    "name": "res",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1DaiGateway"
                }
            ]
        },
        {
            "@id": "0x95fcea78",
            "chef:signature": "postUpgradeInit()",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "postUpgradeInit",
            "chef:inputs": [],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                }
            ]
        },
        {
            "@id": "0xbcf2e6eb",
            "chef:signature": "redirectedExits(bytes32)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "redirectedExits",
            "chef:inputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "isExit",
                    "type": "bool",
                    "@type": "bool"
                },
                {
                    "internalType": "address",
                    "name": "_newTo",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bytes",
                    "name": "_newData",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                }
            ]
        },
        {
            "@id": "0xf887ea40",
            "chef:signature": "router()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "router",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                }
            ]
        },
        {
            "@id": "0xbd5f3e7d",
            "chef:signature": "transferExitAndCall(uint256,address,address,bytes,bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "transferExitAndCall",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "_exitNum",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "_initialDestination",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_newDestination",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bytes",
                    "name": "_newData",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "bytes",
                    "name": "_data",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                }
            ]
        },
        {
            "payable": false,
            "@id": "0x8d5004028f09180abc4210f60fbf14955ac50d24898f80bef2b1efe077e75bd6",
            "chef:signature": "0()",
            "@type": "chef:Event",
            "evm:stateMutability": "nonpayable",
            "chef:name": "0",
            "chef:inputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ValidatorWalletCreator"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea26",
            "chef:signature": "AddedOwner(address)",
            "@type": "chef:Event",
            "chef:name": "AddedOwner",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xf2a0eb156472d1440255b0d7c1e19cc07115d1051fe605b0dce69acfec884d9c",
            "chef:signature": "ApproveHash(bytes32,address)",
            "@type": "chef:Event",
            "chef:name": "ApproveHash",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "approvedHash",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x75e41bc35ff1bf14d81d1d2f649c0084a0f974f9289c803ec9898eeec4c8d0b8",
            "chef:signature": "ChangedMasterCopy(address)",
            "@type": "chef:Event",
            "chef:name": "ChangedMasterCopy",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "masterCopy",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x610f7ff2b304ae8903c3de74c60c6ab1f7d6226b3f52c5161905bb5ad4039c93",
            "chef:signature": "ChangedThreshold(uint256)",
            "@type": "chef:Event",
            "chef:name": "ChangedThreshold",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "threshold",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xaab4fa2b463f581b2b32cb3b7e3b704b9ce37cc209b5fb4d77e593ace4054276",
            "chef:signature": "DisabledModule(address)",
            "@type": "chef:Event",
            "chef:name": "DisabledModule",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "contract Module",
                    "name": "module",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xecdf3a3effea5783a3c4c2140e677577666428d44ed9d474a0b3a4c9943f8440",
            "chef:signature": "EnabledModule(address)",
            "@type": "chef:Event",
            "chef:name": "EnabledModule",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "contract Module",
                    "name": "module",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x23428b18acfb3ea64b08dc0c1d296ea9c09702c09083ca5272e64d115b687d23",
            "chef:signature": "ExecutionFailure(bytes32,uint256)",
            "@type": "chef:Event",
            "chef:name": "ExecutionFailure",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "txHash",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "payment",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xacd2c8702804128fdb0db2bb49f6d127dd0181c13fd45dbfe16de0930e2bd375",
            "chef:signature": "ExecutionFromModuleFailure(address)",
            "@type": "chef:Event",
            "chef:name": "ExecutionFromModuleFailure",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "module",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x6895c13664aa4f67288b25d7a21d7aaa34916e355fb9b6fae0a139a9085becb8",
            "chef:signature": "ExecutionFromModuleSuccess(address)",
            "@type": "chef:Event",
            "chef:name": "ExecutionFromModuleSuccess",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "module",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x442e715f626346e8c54381002da614f62bee8d27386535b2521ec8540898556e",
            "chef:signature": "ExecutionSuccess(bytes32,uint256)",
            "@type": "chef:Event",
            "chef:name": "ExecutionSuccess",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "txHash",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "payment",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xf8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf",
            "chef:signature": "RemovedOwner(address)",
            "@type": "chef:Event",
            "chef:name": "RemovedOwner",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xe7f4675038f4f6034dfcbbb24c4dc08e4ebf10eb9d257d3d02c0f38d122ac6e4",
            "chef:signature": "SignMsg(bytes32)",
            "@type": "chef:Event",
            "chef:name": "SignMsg",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "msgHash",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0xa3f4df7e",
            "chef:signature": "NAME()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "NAME",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string",
                    "@type": "string"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0xffa1ad74",
            "chef:signature": "VERSION()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "VERSION",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string",
                    "@type": "string"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0x0d582f13",
            "chef:signature": "addOwnerWithThreshold(address,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "addOwnerWithThreshold",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_threshold",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0xd4d9bdcd",
            "chef:signature": "approveHash(bytes32)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "approveHash",
            "chef:inputs": [
                {
                    "internalType": "bytes32",
                    "name": "hashToApprove",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x7d832974",
            "chef:signature": "approvedHashes(address,bytes32)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "approvedHashes",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0x7de7edef",
            "chef:signature": "changeMasterCopy(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "changeMasterCopy",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "_masterCopy",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0x694e80c3",
            "chef:signature": "changeThreshold(uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "changeThreshold",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "_threshold",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0xe009cfde",
            "chef:signature": "disableModule(address,address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "disableModule",
            "chef:inputs": [
                {
                    "internalType": "contract Module",
                    "name": "prevModule",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "contract Module",
                    "name": "module",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0xf698da25",
            "chef:signature": "domainSeparator()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "domainSeparator",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0x610b5925",
            "chef:signature": "enableModule(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "enableModule",
            "chef:inputs": [
                {
                    "internalType": "contract Module",
                    "name": "module",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0xe86637db",
            "chef:signature": "encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "encodeTransactionData",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "enum Enum.Operation",
                    "name": "operation",
                    "type": "uint8",
                    "@type": "uint8"
                },
                {
                    "internalType": "uint256",
                    "name": "safeTxGas",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "baseGas",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "gasPrice",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "gasToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "refundReceiver",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_nonce",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0x6a761202",
            "chef:signature": "execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "execTransaction",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "enum Enum.Operation",
                    "name": "operation",
                    "type": "uint8",
                    "@type": "uint8"
                },
                {
                    "internalType": "uint256",
                    "name": "safeTxGas",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "baseGas",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "gasPrice",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "gasToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address payable",
                    "name": "refundReceiver",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bytes",
                    "name": "signatures",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "success",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0x468721a7",
            "chef:signature": "execTransactionFromModule(address,uint256,bytes,uint8)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "execTransactionFromModule",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "enum Enum.Operation",
                    "name": "operation",
                    "type": "uint8",
                    "@type": "uint8"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "success",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0x5229073f",
            "chef:signature": "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "execTransactionFromModuleReturnData",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "enum Enum.Operation",
                    "name": "operation",
                    "type": "uint8",
                    "@type": "uint8"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "success",
                    "type": "bool",
                    "@type": "bool"
                },
                {
                    "internalType": "bytes",
                    "name": "returnData",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x0a1028c4",
            "chef:signature": "getMessageHash(bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getMessageHash",
            "chef:inputs": [
                {
                    "internalType": "bytes",
                    "name": "message",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0xb2494df3",
            "chef:signature": "getModules()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getModules",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address[]",
                    "name": "",
                    "type": "address[]",
                    "@type": "address[]"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0xcc2f8452",
            "chef:signature": "getModulesPaginated(address,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getModulesPaginated",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "start",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "pageSize",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "address[]",
                    "name": "array",
                    "type": "address[]",
                    "@type": "address[]"
                },
                {
                    "internalType": "address",
                    "name": "next",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0xa0e67e2b",
            "chef:signature": "getOwners()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getOwners",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address[]",
                    "name": "",
                    "type": "address[]",
                    "@type": "address[]"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0xe75235b8",
            "chef:signature": "getThreshold()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getThreshold",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0xd8d11f78",
            "chef:signature": "getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getTransactionHash",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "enum Enum.Operation",
                    "name": "operation",
                    "type": "uint8",
                    "@type": "uint8"
                },
                {
                    "internalType": "uint256",
                    "name": "safeTxGas",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "baseGas",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "gasPrice",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "gasToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "refundReceiver",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_nonce",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x2f54bf6e",
            "chef:signature": "isOwner(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "isOwner",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0x20c13b0b",
            "chef:signature": "isValidSignature(bytes,bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "isValidSignature",
            "chef:inputs": [
                {
                    "internalType": "bytes",
                    "name": "_data",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "bytes",
                    "name": "_signature",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bytes4",
                    "name": "",
                    "type": "bytes4",
                    "@type": "bytes4"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0xaffed0e0",
            "chef:signature": "nonce()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "nonce",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0xf8dc5dd9",
            "chef:signature": "removeOwner(address,address,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "removeOwner",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "prevOwner",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_threshold",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0xc4ca3a9c",
            "chef:signature": "requiredTxGas(address,uint256,bytes,uint8)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "requiredTxGas",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "enum Enum.Operation",
                    "name": "operation",
                    "type": "uint8",
                    "@type": "uint8"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0xf08a0323",
            "chef:signature": "setFallbackHandler(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "setFallbackHandler",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "handler",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0xb63e800d",
            "chef:signature": "setup(address[],uint256,address,bytes,address,address,uint256,address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "setup",
            "chef:inputs": [
                {
                    "internalType": "address[]",
                    "name": "_owners",
                    "type": "address[]",
                    "@type": "address[]"
                },
                {
                    "internalType": "uint256",
                    "name": "_threshold",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "address",
                    "name": "fallbackHandler",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "paymentToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "payment",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address payable",
                    "name": "paymentReceiver",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0x85a5affe",
            "chef:signature": "signMessage(bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "signMessage",
            "chef:inputs": [
                {
                    "internalType": "bytes",
                    "name": "_data",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x5ae6bd37",
            "chef:signature": "signedMessages(bytes32)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "signedMessages",
            "chef:inputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0xe318b52b",
            "chef:signature": "swapOwner(address,address,address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "swapOwner",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "prevOwner",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "oldOwner",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
            "chef:signature": "OwnershipTransferred(address,address)",
            "@type": "chef:Event",
            "chef:name": "OwnershipTransferred",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ProxyAdmin"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ProxyAdmin"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ValidatorWalletCreator"
                }
            ]
        },
        {
            "@id": "0x7eff275e",
            "chef:signature": "changeProxyAdmin(address,address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "changeProxyAdmin",
            "chef:inputs": [
                {
                    "internalType": "contract TransparentUpgradeableProxy",
                    "name": "proxy",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "newAdmin",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ProxyAdmin"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ProxyAdmin"
                }
            ]
        },
        {
            "@id": "0xf3b7dead",
            "chef:signature": "getProxyAdmin(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getProxyAdmin",
            "chef:inputs": [
                {
                    "internalType": "contract TransparentUpgradeableProxy",
                    "name": "proxy",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ProxyAdmin"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ProxyAdmin"
                }
            ]
        },
        {
            "@id": "0x204e1c7a",
            "chef:signature": "getProxyImplementation(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getProxyImplementation",
            "chef:inputs": [
                {
                    "internalType": "contract TransparentUpgradeableProxy",
                    "name": "proxy",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ProxyAdmin"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ProxyAdmin"
                }
            ]
        },
        {
            "@id": "0x8da5cb5b",
            "chef:signature": "owner()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "owner",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ProxyAdmin"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ProxyAdmin"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ValidatorWalletCreator"
                }
            ]
        },
        {
            "@id": "0x715018a6",
            "chef:signature": "renounceOwnership()",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "renounceOwnership",
            "chef:inputs": [],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ProxyAdmin"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ProxyAdmin"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ValidatorWalletCreator"
                }
            ]
        },
        {
            "@id": "0xf2fde38b",
            "chef:signature": "transferOwnership(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "transferOwnership",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ProxyAdmin"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ProxyAdmin"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ValidatorWalletCreator"
                }
            ]
        },
        {
            "@id": "0x99a88ec4",
            "chef:signature": "upgrade(address,address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "upgrade",
            "chef:inputs": [
                {
                    "internalType": "contract TransparentUpgradeableProxy",
                    "name": "proxy",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "implementation",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ProxyAdmin"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ProxyAdmin"
                }
            ]
        },
        {
            "@id": "0x9623609d",
            "chef:signature": "upgradeAndCall(address,address,bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "upgradeAndCall",
            "chef:inputs": [
                {
                    "internalType": "contract TransparentUpgradeableProxy",
                    "name": "proxy",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "implementation",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ProxyAdmin"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ProxyAdmin"
                }
            ]
        },
        {
            "@id": "0xda78e7d1",
            "chef:signature": "executeOneStep((uint256,address),(uint8,(((uint8,uint256)[]),bytes32),(((uint8,uint256)[]),bytes32),(((uint8,uint256),bytes32,uint32,uint32)[],bytes32),bytes32,uint32,uint32,uint32,bytes32),(bytes32,(uint64,uint64,bytes32),bytes32,bytes32,uint32),(uint16,uint256),bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "pure",
            "chef:name": "executeOneStep",
            "chef:inputs": [
                {
                    "components": [
                        {
                            "internalType": "uint256",
                            "name": "maxInboxMessagesRead",
                            "type": "uint256"
                        },
                        {
                            "internalType": "contract IBridge",
                            "name": "bridge",
                            "type": "address"
                        }
                    ],
                    "internalType": "struct ExecutionContext",
                    "name": "",
                    "type": "tuple",
                    "@type": "tuple"
                },
                {
                    "components": [
                        {
                            "internalType": "enum MachineStatus",
                            "name": "status",
                            "type": "uint8"
                        },
                        {
                            "components": [
                                {
                                    "components": [
                                        {
                                            "components": [
                                                {
                                                    "internalType": "enum ValueType",
                                                    "name": "valueType",
                                                    "type": "uint8"
                                                },
                                                {
                                                    "internalType": "uint256",
                                                    "name": "contents",
                                                    "type": "uint256"
                                                }
                                            ],
                                            "internalType": "struct Value[]",
                                            "name": "inner",
                                            "type": "tuple[]"
                                        }
                                    ],
                                    "internalType": "struct ValueArray",
                                    "name": "proved",
                                    "type": "tuple"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "remainingHash",
                                    "type": "bytes32"
                                }
                            ],
                            "internalType": "struct ValueStack",
                            "name": "valueStack",
                            "type": "tuple"
                        },
                        {
                            "components": [
                                {
                                    "components": [
                                        {
                                            "components": [
                                                {
                                                    "internalType": "enum ValueType",
                                                    "name": "valueType",
                                                    "type": "uint8"
                                                },
                                                {
                                                    "internalType": "uint256",
                                                    "name": "contents",
                                                    "type": "uint256"
                                                }
                                            ],
                                            "internalType": "struct Value[]",
                                            "name": "inner",
                                            "type": "tuple[]"
                                        }
                                    ],
                                    "internalType": "struct ValueArray",
                                    "name": "proved",
                                    "type": "tuple"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "remainingHash",
                                    "type": "bytes32"
                                }
                            ],
                            "internalType": "struct ValueStack",
                            "name": "internalStack",
                            "type": "tuple"
                        },
                        {
                            "components": [
                                {
                                    "components": [
                                        {
                                            "components": [
                                                {
                                                    "internalType": "enum ValueType",
                                                    "name": "valueType",
                                                    "type": "uint8"
                                                },
                                                {
                                                    "internalType": "uint256",
                                                    "name": "contents",
                                                    "type": "uint256"
                                                }
                                            ],
                                            "internalType": "struct Value",
                                            "name": "returnPc",
                                            "type": "tuple"
                                        },
                                        {
                                            "internalType": "bytes32",
                                            "name": "localsMerkleRoot",
                                            "type": "bytes32"
                                        },
                                        {
                                            "internalType": "uint32",
                                            "name": "callerModule",
                                            "type": "uint32"
                                        },
                                        {
                                            "internalType": "uint32",
                                            "name": "callerModuleInternals",
                                            "type": "uint32"
                                        }
                                    ],
                                    "internalType": "struct StackFrame[]",
                                    "name": "proved",
                                    "type": "tuple[]"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "remainingHash",
                                    "type": "bytes32"
                                }
                            ],
                            "internalType": "struct StackFrameWindow",
                            "name": "frameStack",
                            "type": "tuple"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "globalStateHash",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint32",
                            "name": "moduleIdx",
                            "type": "uint32"
                        },
                        {
                            "internalType": "uint32",
                            "name": "functionIdx",
                            "type": "uint32"
                        },
                        {
                            "internalType": "uint32",
                            "name": "functionPc",
                            "type": "uint32"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "modulesRoot",
                            "type": "bytes32"
                        }
                    ],
                    "internalType": "struct Machine",
                    "name": "startMach",
                    "type": "tuple",
                    "@type": "tuple"
                },
                {
                    "components": [
                        {
                            "internalType": "bytes32",
                            "name": "globalsMerkleRoot",
                            "type": "bytes32"
                        },
                        {
                            "components": [
                                {
                                    "internalType": "uint64",
                                    "name": "size",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "maxSize",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "merkleRoot",
                                    "type": "bytes32"
                                }
                            ],
                            "internalType": "struct ModuleMemory",
                            "name": "moduleMemory",
                            "type": "tuple"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "tablesMerkleRoot",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "functionsMerkleRoot",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint32",
                            "name": "internalsOffset",
                            "type": "uint32"
                        }
                    ],
                    "internalType": "struct Module",
                    "name": "startMod",
                    "type": "tuple",
                    "@type": "tuple"
                },
                {
                    "components": [
                        {
                            "internalType": "uint16",
                            "name": "opcode",
                            "type": "uint16"
                        },
                        {
                            "internalType": "uint256",
                            "name": "argumentData",
                            "type": "uint256"
                        }
                    ],
                    "internalType": "struct Instruction",
                    "name": "inst",
                    "type": "tuple",
                    "@type": "tuple"
                },
                {
                    "internalType": "bytes",
                    "name": "proof",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [
                {
                    "components": [
                        {
                            "internalType": "enum MachineStatus",
                            "name": "status",
                            "type": "uint8"
                        },
                        {
                            "components": [
                                {
                                    "components": [
                                        {
                                            "components": [
                                                {
                                                    "internalType": "enum ValueType",
                                                    "name": "valueType",
                                                    "type": "uint8"
                                                },
                                                {
                                                    "internalType": "uint256",
                                                    "name": "contents",
                                                    "type": "uint256"
                                                }
                                            ],
                                            "internalType": "struct Value[]",
                                            "name": "inner",
                                            "type": "tuple[]"
                                        }
                                    ],
                                    "internalType": "struct ValueArray",
                                    "name": "proved",
                                    "type": "tuple"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "remainingHash",
                                    "type": "bytes32"
                                }
                            ],
                            "internalType": "struct ValueStack",
                            "name": "valueStack",
                            "type": "tuple"
                        },
                        {
                            "components": [
                                {
                                    "components": [
                                        {
                                            "components": [
                                                {
                                                    "internalType": "enum ValueType",
                                                    "name": "valueType",
                                                    "type": "uint8"
                                                },
                                                {
                                                    "internalType": "uint256",
                                                    "name": "contents",
                                                    "type": "uint256"
                                                }
                                            ],
                                            "internalType": "struct Value[]",
                                            "name": "inner",
                                            "type": "tuple[]"
                                        }
                                    ],
                                    "internalType": "struct ValueArray",
                                    "name": "proved",
                                    "type": "tuple"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "remainingHash",
                                    "type": "bytes32"
                                }
                            ],
                            "internalType": "struct ValueStack",
                            "name": "internalStack",
                            "type": "tuple"
                        },
                        {
                            "components": [
                                {
                                    "components": [
                                        {
                                            "components": [
                                                {
                                                    "internalType": "enum ValueType",
                                                    "name": "valueType",
                                                    "type": "uint8"
                                                },
                                                {
                                                    "internalType": "uint256",
                                                    "name": "contents",
                                                    "type": "uint256"
                                                }
                                            ],
                                            "internalType": "struct Value",
                                            "name": "returnPc",
                                            "type": "tuple"
                                        },
                                        {
                                            "internalType": "bytes32",
                                            "name": "localsMerkleRoot",
                                            "type": "bytes32"
                                        },
                                        {
                                            "internalType": "uint32",
                                            "name": "callerModule",
                                            "type": "uint32"
                                        },
                                        {
                                            "internalType": "uint32",
                                            "name": "callerModuleInternals",
                                            "type": "uint32"
                                        }
                                    ],
                                    "internalType": "struct StackFrame[]",
                                    "name": "proved",
                                    "type": "tuple[]"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "remainingHash",
                                    "type": "bytes32"
                                }
                            ],
                            "internalType": "struct StackFrameWindow",
                            "name": "frameStack",
                            "type": "tuple"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "globalStateHash",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint32",
                            "name": "moduleIdx",
                            "type": "uint32"
                        },
                        {
                            "internalType": "uint32",
                            "name": "functionIdx",
                            "type": "uint32"
                        },
                        {
                            "internalType": "uint32",
                            "name": "functionPc",
                            "type": "uint32"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "modulesRoot",
                            "type": "bytes32"
                        }
                    ],
                    "internalType": "struct Machine",
                    "name": "mach",
                    "type": "tuple",
                    "@type": "tuple"
                },
                {
                    "components": [
                        {
                            "internalType": "bytes32",
                            "name": "globalsMerkleRoot",
                            "type": "bytes32"
                        },
                        {
                            "components": [
                                {
                                    "internalType": "uint64",
                                    "name": "size",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "maxSize",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "merkleRoot",
                                    "type": "bytes32"
                                }
                            ],
                            "internalType": "struct ModuleMemory",
                            "name": "moduleMemory",
                            "type": "tuple"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "tablesMerkleRoot",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "functionsMerkleRoot",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint32",
                            "name": "internalsOffset",
                            "type": "uint32"
                        }
                    ],
                    "internalType": "struct Module",
                    "name": "mod",
                    "type": "tuple",
                    "@type": "tuple"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OneStepProverMath"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OneStepProverMemory"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OneStepProver0"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OneStepProverHostIo"
                }
            ]
        },
        {
            "@id": "0xf4cdf172cc7506b91d98e0359a5c279763d5b96961955aeb2ee09387c4f1d047",
            "chef:signature": "0(address,address,bytes)",
            "@type": "chef:Event",
            "evm:stateMutability": "payable",
            "chef:name": "0",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "_logic",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "admin_",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bytes",
                    "name": "_data",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ChallengeManager"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1WethGateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ChallengeManager"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
            "chef:signature": "AdminChanged(address,address)",
            "@type": "chef:Event",
            "chef:name": "AdminChanged",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "previousAdmin",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "newAdmin",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ChallengeManager"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1WethGateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ChallengeManager"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/RollupAdminLogic"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
            "chef:signature": "BeaconUpgraded(address)",
            "@type": "chef:Event",
            "chef:name": "BeaconUpgraded",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "beacon",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ChallengeManager"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ChallengeManager"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/RollupAdminLogic"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
            "chef:signature": "Upgraded(address)",
            "@type": "chef:Event",
            "chef:name": "Upgraded",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "implementation",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ChallengeManager"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1WethGateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ChallengeManager"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/RollupAdminLogic"
                }
            ]
        },
        {
            "@id": "0xf851a440",
            "chef:signature": "admin()",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "admin",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "admin_",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ChallengeManager"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1WethGateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ChallengeManager"
                }
            ]
        },
        {
            "@id": "0x8f283970",
            "chef:signature": "changeAdmin(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "changeAdmin",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "newAdmin",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ChallengeManager"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1WethGateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ChallengeManager"
                }
            ]
        },
        {
            "@id": "0x5c60da1b",
            "chef:signature": "implementation()",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "implementation",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "implementation_",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ChallengeManager"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1WethGateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ChallengeManager"
                }
            ]
        },
        {
            "@id": "0x3659cfe6",
            "chef:signature": "upgradeTo(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "upgradeTo",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "newImplementation",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ChallengeManager"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1WethGateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ChallengeManager"
                }
            ]
        },
        {
            "@id": "0x4f1ef286",
            "chef:signature": "upgradeToAndCall(address,bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "upgradeToAndCall",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "newImplementation",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1ERC20Gateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ChallengeManager"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Inbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1WethGateway"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ChallengeManager"
                }
            ]
        },
        {
            "@id": "0xaea2f06e",
            "chef:signature": "areUnresolvedNodesLinear(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "areUnresolvedNodesLinear",
            "chef:inputs": [
                {
                    "internalType": "contract Rollup",
                    "name": "rollup",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ValidatorUtils"
                }
            ]
        },
        {
            "@id": "0x0a46c1b5",
            "chef:signature": "checkDecidableNextNode(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "checkDecidableNextNode",
            "chef:inputs": [
                {
                    "internalType": "contract Rollup",
                    "name": "rollup",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "enum ValidatorUtils.ConfirmType",
                    "name": "",
                    "type": "uint8",
                    "@type": "uint8"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ValidatorUtils"
                }
            ]
        },
        {
            "@id": "0x3082d029",
            "chef:signature": "findNodeConflict(address,uint256,uint256,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "findNodeConflict",
            "chef:inputs": [
                {
                    "internalType": "contract Rollup",
                    "name": "rollup",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "node1",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "node2",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "maxDepth",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "enum ValidatorUtils.NodeConflict",
                    "name": "",
                    "type": "uint8",
                    "@type": "uint8"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ValidatorUtils"
                }
            ]
        },
        {
            "@id": "0x7988ad37",
            "chef:signature": "findStakerConflict(address,address,address,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "findStakerConflict",
            "chef:inputs": [
                {
                    "internalType": "contract Rollup",
                    "name": "rollup",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "staker1",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "staker2",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "maxDepth",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "enum ValidatorUtils.NodeConflict",
                    "name": "",
                    "type": "uint8",
                    "@type": "uint8"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ValidatorUtils"
                }
            ]
        },
        {
            "@id": "0xe48a5f7b",
            "chef:signature": "getConfig(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getConfig",
            "chef:inputs": [
                {
                    "internalType": "contract Rollup",
                    "name": "rollup",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "confirmPeriodBlocks",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "extraChallengeTimeBlocks",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "arbGasSpeedLimitPerBlock",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "baseStake",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ValidatorUtils"
                }
            ]
        },
        {
            "@id": "0xabeba4f7",
            "chef:signature": "getStakers(address,uint256,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getStakers",
            "chef:inputs": [
                {
                    "internalType": "contract Rollup",
                    "name": "rollup",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "startIndex",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "max",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "address[]",
                    "name": "",
                    "type": "address[]",
                    "@type": "address[]"
                },
                {
                    "internalType": "bool",
                    "name": "hasMore",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ValidatorUtils"
                }
            ]
        },
        {
            "@id": "0x01d9717d",
            "chef:signature": "latestStaked(address,address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "latestStaked",
            "chef:inputs": [
                {
                    "internalType": "contract Rollup",
                    "name": "rollup",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "staker",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ValidatorUtils"
                }
            ]
        },
        {
            "@id": "0x7464ae06",
            "chef:signature": "refundableStakers(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "refundableStakers",
            "chef:inputs": [
                {
                    "internalType": "contract Rollup",
                    "name": "rollup",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "address[]",
                    "name": "",
                    "type": "address[]",
                    "@type": "address[]"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ValidatorUtils"
                }
            ]
        },
        {
            "@id": "0x1fc43bb6",
            "chef:signature": "requireConfirmable(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "requireConfirmable",
            "chef:inputs": [
                {
                    "internalType": "contract Rollup",
                    "name": "rollup",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ValidatorUtils"
                }
            ]
        },
        {
            "@id": "0x71229340",
            "chef:signature": "requireRejectable(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "requireRejectable",
            "chef:inputs": [
                {
                    "internalType": "contract Rollup",
                    "name": "rollup",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ValidatorUtils"
                }
            ]
        },
        {
            "@id": "0xc308eaaf",
            "chef:signature": "stakedNodes(address,address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "stakedNodes",
            "chef:inputs": [
                {
                    "internalType": "contract Rollup",
                    "name": "rollup",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "staker",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]",
                    "@type": "uint256[]"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ValidatorUtils"
                }
            ]
        },
        {
            "@id": "0x8f67e6bb",
            "chef:signature": "stakerInfo(address,address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "stakerInfo",
            "chef:inputs": [
                {
                    "internalType": "contract Rollup",
                    "name": "rollup",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "stakerAddress",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "isStaked",
                    "type": "bool",
                    "@type": "bool"
                },
                {
                    "internalType": "uint256",
                    "name": "latestStakedNode",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "amountStaked",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "currentChallenge",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ValidatorUtils"
                }
            ]
        },
        {
            "@id": "0xa8ac9cf3",
            "chef:signature": "timedOutChallenges(address,uint256,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "timedOutChallenges",
            "chef:inputs": [
                {
                    "internalType": "contract Rollup",
                    "name": "rollup",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "startIndex",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "max",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "contract IChallenge[]",
                    "name": "",
                    "type": "address[]",
                    "@type": "address[]"
                },
                {
                    "internalType": "bool",
                    "name": "hasMore",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ValidatorUtils"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x2d9d115ef3e4a606d698913b1eae831a3cdfe20d9a83d48007b0526749c3d466",
            "chef:signature": "BridgeCallTriggered(address,address,uint256,bytes)",
            "@type": "chef:Event",
            "chef:name": "BridgeCallTriggered",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "outbox",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "destAddr",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x6675ce8882cb71637de5903a193d218cc0544be9c0650cb83e0955f6aa2bf521",
            "chef:signature": "InboxToggle(address,bool)",
            "@type": "chef:Event",
            "chef:name": "InboxToggle",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "inbox",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "enabled",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x23be8e12e420b5da9fb98d8102572f640fb3c11a0085060472dfc0ed194b3cf7",
            "chef:signature": "MessageDelivered(uint256,bytes32,address,uint8,address,bytes32)",
            "@type": "chef:Event",
            "chef:name": "MessageDelivered",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "messageIndex",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "beforeInboxAcc",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "inbox",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint8",
                    "name": "kind",
                    "type": "uint8",
                    "@type": "uint8"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "sender",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "messageDataHash",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x49477e7356dbcb654ab85d7534b50126772d938130d1350e23e2540370c8dffa",
            "chef:signature": "OutboxToggle(address,bool)",
            "@type": "chef:Event",
            "chef:name": "OutboxToggle",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "outbox",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "enabled",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0xab5d8943",
            "chef:signature": "activeOutbox()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "activeOutbox",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0x7ee94329",
            "chef:signature": "allowedInboxList(uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "allowedInboxList",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0xc29372de",
            "chef:signature": "allowedInboxes(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "allowedInboxes",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "inbox",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0x945e1147",
            "chef:signature": "allowedOutboxList(uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "allowedOutboxList",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0x413b35bd",
            "chef:signature": "allowedOutboxes(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "allowedOutboxes",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "outbox",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0x02bbfad1",
            "chef:signature": "deliverMessageToInbox(uint8,address,bytes32)",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "deliverMessageToInbox",
            "chef:inputs": [
                {
                    "internalType": "uint8",
                    "name": "kind",
                    "type": "uint8",
                    "@type": "uint8"
                },
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bytes32",
                    "name": "messageDataHash",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0x9e5d4c49",
            "chef:signature": "executeCall(address,uint256,bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "executeCall",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "destAddr",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "success",
                    "type": "bool",
                    "@type": "bool"
                },
                {
                    "internalType": "bytes",
                    "name": "returnData",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0xd9dd67ab",
            "chef:signature": "inboxAccs(uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "inboxAccs",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                }
            ]
        },
        {
            "@id": "0x8129fc1c",
            "chef:signature": "initialize()",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "initialize",
            "chef:inputs": [],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0x3dbcc8d1",
            "chef:signature": "messageCount()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "messageCount",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                }
            ]
        },
        {
            "@id": "0xe45b7ce6",
            "chef:signature": "setInbox(address,bool)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "setInbox",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "inbox",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bool",
                    "name": "enabled",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0xcee3d728",
            "chef:signature": "setOutbox(address,bool)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "setOutbox",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "outbox",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bool",
                    "name": "enabled",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x5ac6c46c93c8d0e53714ba3b53db3e7c046da994313d7ed0d192028bc7c228b0",
            "chef:signature": "ChangedFallbackHandler(address)",
            "@type": "chef:Event",
            "chef:name": "ChangedFallbackHandler",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "handler",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x1151116914515bc0891ff9047a6cb32cf902546f83066499bcf8ba33d2353fa2",
            "chef:signature": "ChangedGuard(address)",
            "@type": "chef:Event",
            "chef:name": "ChangedGuard",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "guard",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x3d0ce9bfc3ed7d6862dbb28b2dea94561fe714a1b4d019aa8af39730d1ad7c3d",
            "chef:signature": "SafeReceived(address,uint256)",
            "@type": "chef:Event",
            "chef:name": "SafeReceived",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "sender",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x141df868a6331af528e38c83b7aa03edc19be66e37ae67f9285bf4f8e3c6a1a8",
            "chef:signature": "SafeSetup(address,address[],uint256,address,address)",
            "@type": "chef:Event",
            "chef:name": "SafeSetup",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "initiator",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "address[]",
                    "name": "owners",
                    "type": "address[]",
                    "@type": "address[]"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "threshold",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "initializer",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "fallbackHandler",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0x12fb68e0",
            "chef:signature": "checkNSignatures(bytes32,bytes,bytes,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "checkNSignatures",
            "chef:inputs": [
                {
                    "internalType": "bytes32",
                    "name": "dataHash",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "bytes",
                    "name": "signatures",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "uint256",
                    "name": "requiredSignatures",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0x934f3a11",
            "chef:signature": "checkSignatures(bytes32,bytes,bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "checkSignatures",
            "chef:inputs": [
                {
                    "internalType": "bytes32",
                    "name": "dataHash",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "bytes",
                    "name": "signatures",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0x3408e470",
            "chef:signature": "getChainId()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getChainId",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0x5624b25b",
            "chef:signature": "getStorageAt(uint256,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getStorageAt",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "offset",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "length",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0x2d9ad53d",
            "chef:signature": "isModuleEnabled(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "isModuleEnabled",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "module",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0xe19a9dd9",
            "chef:signature": "setGuard(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "setGuard",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "guard",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0xb4faba09",
            "chef:signature": "simulateAndRevert(address,bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "simulateAndRevert",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "targetContract",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bytes",
                    "name": "calldataPayload",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x3a8f8eb961383a94d41d193e16a3af73eaddfd5764a4c640257323a1603ac331",
            "chef:signature": "DefaultGatewayUpdated(address)",
            "@type": "chef:Event",
            "chef:name": "DefaultGatewayUpdated",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "newDefaultGateway",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x812ca95fe4492a9e2d1f2723c2c40c03a60a27b059581ae20ac4e4d73bfba354",
            "chef:signature": "GatewaySet(address,address)",
            "@type": "chef:Event",
            "chef:name": "GatewaySet",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "l1Token",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "gateway",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x85291dff2161a93c2f12c819d31889c96c63042116f5bc5a205aa701c2c429f5",
            "chef:signature": "TransferRouted(address,address,address,address)",
            "@type": "chef:Event",
            "chef:name": "TransferRouted",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "token",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "_userFrom",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "_userTo",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "gateway",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                }
            ]
        },
        {
            "@id": "0x03295802",
            "chef:signature": "defaultGateway()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "defaultGateway",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                }
            ]
        },
        {
            "@id": "0xbda009fe",
            "chef:signature": "getGateway(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getGateway",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "_token",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "gateway",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                }
            ]
        },
        {
            "@id": "0x1459457a",
            "chef:signature": "initialize(address,address,address,address,address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "initialize",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "_owner",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_defaultGateway",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_whitelist",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_counterpartGateway",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_inbox",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                }
            ]
        },
        {
            "@id": "0xed08fdc6",
            "chef:signature": "l1TokenToGateway(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "l1TokenToGateway",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                }
            ]
        },
        {
            "@id": "0x5625a952",
            "chef:signature": "setDefaultGateway(address,uint256,uint256,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "setDefaultGateway",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "newL1DefaultGateway",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_maxGas",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_gasPriceBid",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_maxSubmissionCost",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                }
            ]
        },
        {
            "@id": "0x2d67b72d",
            "chef:signature": "setGateway(address,uint256,uint256,uint256,address)",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "setGateway",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                }
            ]
        },
        {
            "@id": "0xdd614569",
            "chef:signature": "setGateway(address,uint256,uint256,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "setGateway",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "_gateway",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_maxGas",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_gasPriceBid",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_maxSubmissionCost",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                }
            ]
        },
        {
            "@id": "0x658b53f4",
            "chef:signature": "setGateways(address[],address[],uint256,uint256,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "setGateways",
            "chef:inputs": [
                {
                    "internalType": "address[]",
                    "name": "_token",
                    "type": "address[]",
                    "@type": "address[]"
                },
                {
                    "internalType": "address[]",
                    "name": "_gateway",
                    "type": "address[]",
                    "@type": "address[]"
                },
                {
                    "internalType": "uint256",
                    "name": "_maxGas",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_gasPriceBid",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_maxSubmissionCost",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                }
            ]
        },
        {
            "@id": "0x13af4035",
            "chef:signature": "setOwner(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "setOwner",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1GatewayRouter"
                }
            ]
        },
        {
            "@id": "0xa3748f0a92719d6e7ce7f9c9c450772749c23429c6a57c2d47fcb44e96994886",
            "chef:signature": "0(uint256)",
            "@type": "chef:Event",
            "evm:stateMutability": "nonpayable",
            "chef:name": "0",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "_confirmPeriodBlocks",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x2400bd6e429cfcd98fe43a75bbbe4702c59c99d636100690130cc1ebb611c5a2",
            "chef:signature": "NodeConfirmed(uint256,bytes32,uint256,bytes32,uint256)",
            "@type": "chef:Event",
            "chef:name": "NodeConfirmed",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "nodeNum",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "afterSendAcc",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "afterSendCount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "afterLogAcc",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "afterLogCount",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x8016306209aff73e79f274cf38a41928996f746e2953111902e1f55be1713a54",
            "chef:signature": "NodeCreated(uint256,bytes32,bytes32,bytes32,uint256,uint256,bytes32,bytes32[3][2],uint256[4][2])",
            "@type": "chef:Event",
            "chef:name": "NodeCreated",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "nodeNum",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "parentNodeHash",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "nodeHash",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "executionHash",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "inboxMaxCount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "afterInboxBatchEndCount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "afterInboxBatchAcc",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "indexed": false,
                    "internalType": "bytes32[3][2]",
                    "name": "assertionBytes32Fields",
                    "type": "bytes32[3][2]",
                    "@type": "bytes32[3][2]"
                },
                {
                    "indexed": false,
                    "internalType": "uint256[4][2]",
                    "name": "assertionIntFields",
                    "type": "uint256[4][2]",
                    "@type": "uint256[4][2]"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x9f7eee12f08e41a1d1a617e76576aa2d6a1e06dbdd72d817e62b6e8dfdebe2a3",
            "chef:signature": "NodeRejected(uint256)",
            "@type": "chef:Event",
            "chef:name": "NodeRejected",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "nodeNum",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
            "chef:signature": "Paused(address)",
            "@type": "chef:Event",
            "chef:name": "Paused",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "account",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xa5256d19d4ddaf646f4b5c1861b8d4c08238e6356b8ae36dcc49ac67fda75879",
            "chef:signature": "RollupChallengeStarted(address,address,address,uint256)",
            "@type": "chef:Event",
            "chef:name": "RollupChallengeStarted",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "challengeContract",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "asserter",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "challenger",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "challengedNode",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x4ac0014773275a3dfb58c58539631006301de41998cce7c4f8698d297c88bb2d",
            "chef:signature": "RollupCreated(bytes32)",
            "@type": "chef:Event",
            "chef:name": "RollupCreated",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "machineHash",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
            "chef:signature": "Unpaused(address)",
            "@type": "chef:Event",
            "chef:name": "Unpaused",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "account",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xebd093d389ab57f3566918d2c379a2b4d9539e8eb95efad9d5e465457833fde6",
            "chef:signature": "UserStakeUpdated(address,uint256,uint256)",
            "@type": "chef:Event",
            "chef:name": "UserStakeUpdated",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "user",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "initialBalance",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "finalBalance",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xa740af14c56e4e04a617b1de1eb20de73270decbaaead14f142aabf3038e5ae2",
            "chef:signature": "UserWithdrawableFundsUpdated(address,uint256,uint256)",
            "@type": "chef:Event",
            "chef:name": "UserWithdrawableFundsUpdated",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "user",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "initialBalance",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "finalBalance",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0xe4781e10",
            "chef:signature": "STORAGE_GAP_1()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "STORAGE_GAP_1",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0x7f4320ce",
            "chef:signature": "STORAGE_GAP_2()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "STORAGE_GAP_2",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0xe8bd4922",
            "chef:signature": "_stakerMap(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "_stakerMap",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "latestStakedNode",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "amountStaked",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "currentChallenge",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bool",
                    "name": "isStaked",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0xef40a670",
            "chef:signature": "amountStaked(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "amountStaked",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "staker",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0x5e8ef106",
            "chef:signature": "arbGasSpeedLimitPerBlock()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "arbGasSpeedLimitPerBlock",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0xd7445bc8",
            "chef:signature": "avmGasSpeedLimitPerBlock()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "avmGasSpeedLimitPerBlock",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0x76e7e23b",
            "chef:signature": "baseStake()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "baseStake",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0xdc72a33b",
            "chef:signature": "challengeExecutionBisectionDegree()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "challengeExecutionBisectionDegree",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0x5dbaf68b",
            "chef:signature": "challengeFactory()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "challengeFactory",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "contract IChallengeFactory",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0x2e7acfa6",
            "chef:signature": "confirmPeriodBlocks()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "confirmPeriodBlocks",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0x69fd251c",
            "chef:signature": "currentChallenge(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "currentChallenge",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "staker",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0xf51de41b",
            "chef:signature": "delayedBridge()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "delayedBridge",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "contract IBridge",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0x771b2f97",
            "chef:signature": "extraChallengeTimeBlocks()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "extraChallengeTimeBlocks",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0xd735e21d",
            "chef:signature": "firstUnresolvedNode()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "firstUnresolvedNode",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0xd4f43293",
            "chef:signature": "getAdminFacet()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getAdminFacet",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0x662ea47d",
            "chef:signature": "getFacets()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getFacets",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0x4f0f4aa9",
            "chef:signature": "getNode(uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getNode",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "nodeNum",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "contract INode",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0xf8d1f194",
            "chef:signature": "getNodeHash(uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getNodeHash",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0x62a82d7d",
            "chef:signature": "getStakerAddress(uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getStakerAddress",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "stakerNum",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0x715ea22b",
            "chef:signature": "getUserFacet()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getUserFacet",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0x7b6abd9c",
            "chef:signature": "initialize(bytes32,uint256[4],address,address,bytes,address[6],address[2],uint256[2])",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "initialize",
            "chef:inputs": [
                {
                    "internalType": "bytes32",
                    "name": "_machineHash",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "internalType": "uint256[4]",
                    "name": "_rollupParams",
                    "type": "uint256[4]",
                    "@type": "uint256[4]"
                },
                {
                    "internalType": "address",
                    "name": "_stakeToken",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_owner",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bytes",
                    "name": "_extraConfig",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "address[6]",
                    "name": "connectedContracts",
                    "type": "address[6]",
                    "@type": "address[6]"
                },
                {
                    "internalType": "address[2]",
                    "name": "_facets",
                    "type": "address[2]",
                    "@type": "address[2]"
                },
                {
                    "internalType": "uint256[2]",
                    "name": "sequencerInboxParams",
                    "type": "uint256[2]",
                    "@type": "uint256[2]"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0x6177fd18",
            "chef:signature": "isStaked(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "isStaked",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "staker",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0x91c657e8",
            "chef:signature": "isZombie(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "isZombie",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "staker",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0x8640ce5f",
            "chef:signature": "lastStakeBlock()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "lastStakeBlock",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0x65f7f80d",
            "chef:signature": "latestConfirmed()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "latestConfirmed",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0x7ba9534a",
            "chef:signature": "latestNodeCreated()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "latestNodeCreated",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0x3e96576e",
            "chef:signature": "latestStakedNode(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "latestStakedNode",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "staker",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0x45e38b64",
            "chef:signature": "minimumAssertionPeriod()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "minimumAssertionPeriod",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0xd93fe9c4",
            "chef:signature": "nodeFactory()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "nodeFactory",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "contract INodeFactory",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0xce11e6ab",
            "chef:signature": "outbox()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "outbox",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "contract IOutbox",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0x5c975abb",
            "chef:signature": "paused()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "paused",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0x9e8a713f",
            "chef:signature": "rollupEventBridge()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "rollupEventBridge",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "contract RollupEventBridge",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0x3e55c0c7",
            "chef:signature": "sequencerBridge()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "sequencerBridge",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "contract ISequencerInbox",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0x51ed6a30",
            "chef:signature": "stakeToken()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "stakeToken",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0xdff69787",
            "chef:signature": "stakerCount()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "stakerCount",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0x2f30cabd",
            "chef:signature": "withdrawableFunds(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "withdrawableFunds",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0xd01e6602",
            "chef:signature": "zombieAddress(uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "zombieAddress",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "zombieNum",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0x63721d6b",
            "chef:signature": "zombieCount()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "zombieCount",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "@id": "0xf33e1fac",
            "chef:signature": "zombieLatestStakedNode(uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "zombieLatestStakedNode",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "zombieNum",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Rollup"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x06fdde03",
            "chef:signature": "name()",
            "@type": "chef:Function",
            "chef:name": "name",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "name": "",
                    "type": "string",
                    "@type": "string"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisToken"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0x095ea7b3",
            "chef:signature": "approve(address,uint256)",
            "@type": "chef:Function",
            "chef:name": "approve",
            "chef:inputs": [
                {
                    "name": "_spender",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "name": "_value",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisToken"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x18160ddd",
            "chef:signature": "totalSupply()",
            "@type": "chef:Function",
            "chef:name": "totalSupply",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisToken"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0x23b872dd",
            "chef:signature": "transferFrom(address,address,uint256)",
            "@type": "chef:Function",
            "chef:name": "transferFrom",
            "chef:inputs": [
                {
                    "name": "_from",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "name": "_to",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "name": "_value",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisToken"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x313ce567",
            "chef:signature": "decimals()",
            "@type": "chef:Function",
            "chef:name": "decimals",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "name": "",
                    "type": "uint8",
                    "@type": "uint8"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisToken"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x70a08231",
            "chef:signature": "balanceOf(address)",
            "@type": "chef:Function",
            "chef:name": "balanceOf",
            "chef:inputs": [
                {
                    "name": "_owner",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisToken"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x95d89b41",
            "chef:signature": "symbol()",
            "@type": "chef:Function",
            "chef:name": "symbol",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "name": "",
                    "type": "string",
                    "@type": "string"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisToken"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0xa9059cbb",
            "chef:signature": "transfer(address,uint256)",
            "@type": "chef:Function",
            "chef:name": "transfer",
            "chef:inputs": [
                {
                    "name": "_to",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "name": "_value",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisToken"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0xdd62ed3e",
            "chef:signature": "allowance(address,address)",
            "@type": "chef:Function",
            "chef:name": "allowance",
            "chef:inputs": [
                {
                    "name": "_owner",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "name": "_spender",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisToken"
                }
            ]
        },
        {
            "payable": false,
            "@id": "0xe0ef31c89c6d884b4878d53114662fe11ad65a5038ca4cf09f33ef795e8f6fd6",
            "chef:signature": "0(address,address[],uint256[])",
            "@type": "chef:Event",
            "chef:name": "0",
            "chef:inputs": [
                {
                    "name": "dutchAuction",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "name": "owners",
                    "type": "address[]",
                    "@type": "address[]"
                },
                {
                    "name": "tokens",
                    "type": "uint256[]",
                    "@type": "uint256[]"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisToken"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "chef:signature": "Transfer(address,address,uint256)",
            "@type": "chef:Event",
            "chef:name": "Transfer",
            "chef:inputs": [
                {
                    "indexed": true,
                    "name": "from",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "name": "to",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "name": "value",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisToken"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
            "chef:signature": "Approval(address,address,uint256)",
            "@type": "chef:Event",
            "chef:name": "Approval",
            "chef:inputs": [
                {
                    "indexed": true,
                    "name": "owner",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "name": "spender",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "name": "value",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisToken"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x20af7f3bbfe38132b8900ae295cd9c8d1914be7052d061a511f3f728dab18964",
            "chef:signature": "OutBoxTransactionExecuted(address,address,uint256,uint256)",
            "@type": "chef:Event",
            "chef:name": "OutBoxTransactionExecuted",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "destAddr",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "l2Sender",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "outboxEntryIndex",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "transactionIndex",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Outbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OldOutbox"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xe5ccc8d7080a4904b2f4e42d91e8f06b13fe6cb2181ad1fe14644e856b44c131",
            "chef:signature": "OutboxEntryCreated(uint256,uint256,bytes32,uint256)",
            "@type": "chef:Event",
            "chef:name": "OutboxEntryCreated",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "batchNum",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "outboxEntryIndex",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "outputRoot",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "numInBatch",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Outbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OldOutbox"
                }
            ]
        },
        {
            "@id": "0xc75184df",
            "chef:signature": "OUTBOX_VERSION()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "OUTBOX_VERSION",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint128",
                    "name": "",
                    "type": "uint128",
                    "@type": "uint128"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Outbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OldOutbox"
                }
            ]
        },
        {
            "@id": "0x9f0c04bf",
            "chef:signature": "calculateItemHash(address,address,uint256,uint256,uint256,uint256,bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "pure",
            "chef:name": "calculateItemHash",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "l2Sender",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "destAddr",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "l2Block",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "l1Block",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "l2Timestamp",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "calldataForL1",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Outbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OldOutbox"
                }
            ]
        },
        {
            "@id": "0x007436d3",
            "chef:signature": "calculateMerkleRoot(bytes32[],uint256,bytes32)",
            "@type": "chef:Function",
            "evm:stateMutability": "pure",
            "chef:name": "calculateMerkleRoot",
            "chef:inputs": [
                {
                    "internalType": "bytes32[]",
                    "name": "proof",
                    "type": "bytes32[]",
                    "@type": "bytes32[]"
                },
                {
                    "internalType": "uint256",
                    "name": "path",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "bytes32",
                    "name": "item",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Outbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OldOutbox"
                }
            ]
        },
        {
            "@id": "0x9c5cfe0b",
            "chef:signature": "executeTransaction(uint256,bytes32[],uint256,address,address,uint256,uint256,uint256,uint256,bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "executeTransaction",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "batchNum",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "bytes32[]",
                    "name": "proof",
                    "type": "bytes32[]",
                    "@type": "bytes32[]"
                },
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "l2Sender",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "destAddr",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "l2Block",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "l1Block",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "l2Timestamp",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "calldataForL1",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Outbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OldOutbox"
                }
            ]
        },
        {
            "@id": "0xa8929e0b",
            "chef:signature": "isNitroReady()",
            "@type": "chef:Function",
            "evm:stateMutability": "pure",
            "chef:name": "isNitroReady",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Outbox"
                }
            ]
        },
        {
            "@id": "0x11985271",
            "chef:signature": "l2ToL1BatchNum()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "l2ToL1BatchNum",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Outbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OldOutbox"
                }
            ]
        },
        {
            "@id": "0x46547790",
            "chef:signature": "l2ToL1Block()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "l2ToL1Block",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Outbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OldOutbox"
                }
            ]
        },
        {
            "@id": "0x8515bc6a",
            "chef:signature": "l2ToL1EthBlock()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "l2ToL1EthBlock",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Outbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OldOutbox"
                }
            ]
        },
        {
            "@id": "0x72f2a8c7",
            "chef:signature": "l2ToL1OutputId()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "l2ToL1OutputId",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Outbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OldOutbox"
                }
            ]
        },
        {
            "@id": "0x80648b02",
            "chef:signature": "l2ToL1Sender()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "l2ToL1Sender",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Outbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OldOutbox"
                }
            ]
        },
        {
            "@id": "0xb0f30537",
            "chef:signature": "l2ToL1Timestamp()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "l2ToL1Timestamp",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Outbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OldOutbox"
                }
            ]
        },
        {
            "@id": "0x9229bab6",
            "chef:signature": "outboxEntries(uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "outboxEntries",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bytes32",
                    "name": "root",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Outbox"
                }
            ]
        },
        {
            "@id": "0xf1fd3a39",
            "chef:signature": "outboxEntryExists(uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "outboxEntryExists",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "batchNum",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Outbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OldOutbox"
                }
            ]
        },
        {
            "@id": "0x0c726847",
            "chef:signature": "processOutgoingMessages(bytes,uint256[])",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "processOutgoingMessages",
            "chef:inputs": [
                {
                    "internalType": "bytes",
                    "name": "sendsData",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "uint256[]",
                    "name": "sendLengths",
                    "type": "uint256[]",
                    "@type": "uint256[]"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Outbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OldOutbox"
                }
            ]
        },
        {
            "@id": "0xcb23bcb5",
            "chef:signature": "rollup()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "rollup",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Outbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OldOutbox"
                }
            ]
        },
        {
            "@id": "0x8dd14802",
            "chef:signature": "setBridge(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "setBridge",
            "chef:inputs": [
                {
                    "internalType": "contract IBridge",
                    "name": "newBridge",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Outbox"
                }
            ]
        },
        {
            "@id": "0x01ec49bf576ece2a62b82caa5fdbc24131c4da5c25b0f45975c7e6dea2363d08",
            "chef:signature": "0(address,address,address,address)",
            "@type": "chef:Event",
            "evm:stateMutability": "nonpayable",
            "chef:name": "0",
            "chef:inputs": [
                {
                    "internalType": "contract IOneStepProver",
                    "name": "prover0_",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "contract IOneStepProver",
                    "name": "proverMem_",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "contract IOneStepProver",
                    "name": "proverMath_",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "contract IOneStepProver",
                    "name": "proverHostIo_",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OneStepProofEntry"
                }
            ]
        },
        {
            "@id": "0x5d3adcfb",
            "chef:signature": "proveOneStep((uint256,address),uint256,bytes32,bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "proveOneStep",
            "chef:inputs": [
                {
                    "components": [
                        {
                            "internalType": "uint256",
                            "name": "maxInboxMessagesRead",
                            "type": "uint256"
                        },
                        {
                            "internalType": "contract IBridge",
                            "name": "bridge",
                            "type": "address"
                        }
                    ],
                    "internalType": "struct ExecutionContext",
                    "name": "execCtx",
                    "type": "tuple",
                    "@type": "tuple"
                },
                {
                    "internalType": "uint256",
                    "name": "machineStep",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "bytes32",
                    "name": "beforeHash",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "internalType": "bytes",
                    "name": "proof",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bytes32",
                    "name": "afterHash",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OneStepProofEntry"
                }
            ]
        },
        {
            "@id": "0x30a5509f",
            "chef:signature": "prover0()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "prover0",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "contract IOneStepProver",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OneStepProofEntry"
                }
            ]
        },
        {
            "@id": "0x5f52fd7c",
            "chef:signature": "proverHostIo()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "proverHostIo",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "contract IOneStepProver",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OneStepProofEntry"
                }
            ]
        },
        {
            "@id": "0x66e5d9c3",
            "chef:signature": "proverMath()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "proverMath",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "contract IOneStepProver",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OneStepProofEntry"
                }
            ]
        },
        {
            "@id": "0x1f128bc0",
            "chef:signature": "proverMem()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "proverMem",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "contract IOneStepProver",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OneStepProofEntry"
                }
            ]
        },
        {
            "@id": "0xe2051feb29e563f4a772b0f536e5f60affe56308c6901cf52a0f377c6d0311d8",
            "chef:signature": "BadSequencerMessageNumber(uint256,uint256)",
            "@type": "chef:Event",
            "chef:name": "BadSequencerMessageNumber",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "stored",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "received",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0x77abed102f89387a8855f087b7deb8a28a7a748f4dcdf73b76628be481546035",
            "chef:signature": "InvalidOutboxSet(address)",
            "@type": "chef:Event",
            "chef:name": "InvalidOutboxSet",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "outbox",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0xb5cf5b8f9e4c73499e2ee55d0c3e1a52beec51a34b7757aab20a53c3c11acc22",
            "chef:signature": "NotContract(address)",
            "@type": "chef:Event",
            "chef:name": "NotContract",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "addr",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0xb6c60ea32bb2ef0a17be41de8ddbd66ad1862e452d915b85ca9081b4f0794e2f",
            "chef:signature": "NotDelayedInbox(address)",
            "@type": "chef:Event",
            "chef:name": "NotDelayedInbox",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0x32ea82ab63595ba9bec899ff8c52a012c2ed25e633e5ff4b7fa2adca5d6fd628",
            "chef:signature": "NotOutbox(address)",
            "@type": "chef:Event",
            "chef:name": "NotOutbox",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0x0739600713ab02e8a70e6cace2e8ef55b5fa4983b4496fc61a894db2c5beda49",
            "chef:signature": "NotRollupOrOwner(address,address,address)",
            "@type": "chef:Event",
            "chef:name": "NotRollupOrOwner",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "rollup",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0x88f84f0403f39f64b79db22438cb83e59e3508997c20c043115b1ea01a6aa1b4",
            "chef:signature": "NotSequencerInbox(address)",
            "@type": "chef:Event",
            "chef:name": "NotSequencerInbox",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x5e3c1311ea442664e8b1611bfabef659120ea7a0a2cfc0667700bebc69cbffe1",
            "chef:signature": "MessageDelivered(uint256,bytes32,address,uint8,address,bytes32,uint256,uint64)",
            "@type": "chef:Event",
            "chef:name": "MessageDelivered",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "messageIndex",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "beforeInboxAcc",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "inbox",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint8",
                    "name": "kind",
                    "type": "uint8",
                    "@type": "uint8"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "sender",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "messageDataHash",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "baseFeeL1",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint64",
                    "name": "timestamp",
                    "type": "uint64",
                    "@type": "uint64"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x8c1e6003ed33ca6748d4ad3dd4ecc949065c89dceb31fdf546a5289202763c6a",
            "chef:signature": "SequencerInboxUpdated(address)",
            "@type": "chef:Event",
            "chef:name": "SequencerInboxUpdated",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "newSequencerInbox",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0xe77145f4",
            "chef:signature": "acceptFundsFromOldBridge()",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "acceptFundsFromOldBridge",
            "chef:inputs": [],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0xe76f5c8d",
            "chef:signature": "allowedDelayedInboxList(uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "allowedDelayedInboxList",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0xae60bd13",
            "chef:signature": "allowedDelayedInboxes(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "allowedDelayedInboxes",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "inbox",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0xd5719dc2",
            "chef:signature": "delayedInboxAccs(uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "delayedInboxAccs",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0xeca067ad",
            "chef:signature": "delayedMessageCount()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "delayedMessageCount",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0x8db5993b",
            "chef:signature": "enqueueDelayedMessage(uint8,address,bytes32)",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "enqueueDelayedMessage",
            "chef:inputs": [
                {
                    "internalType": "uint8",
                    "name": "kind",
                    "type": "uint8",
                    "@type": "uint8"
                },
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bytes32",
                    "name": "messageDataHash",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0x86598a56",
            "chef:signature": "enqueueSequencerMessage(bytes32,uint256,uint256,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "enqueueSequencerMessage",
            "chef:inputs": [
                {
                    "internalType": "bytes32",
                    "name": "dataHash",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "internalType": "uint256",
                    "name": "afterDelayedMessagesRead",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "prevMessageCount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "newMessageCount",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "seqMessageIndex",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "bytes32",
                    "name": "beforeAcc",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "internalType": "bytes32",
                    "name": "delayedAcc",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "internalType": "bytes32",
                    "name": "acc",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0xc4d66de8",
            "chef:signature": "initialize(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "initialize",
            "chef:inputs": [
                {
                    "internalType": "contract IOwnable",
                    "name": "rollup_",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0xee35f327",
            "chef:signature": "sequencerInbox()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "sequencerInbox",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0x16bf5579",
            "chef:signature": "sequencerInboxAccs(uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "sequencerInboxAccs",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0x0084120c",
            "chef:signature": "sequencerMessageCount()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "sequencerMessageCount",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0x5fca4a16",
            "chef:signature": "sequencerReportedSubMessageCount()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "sequencerReportedSubMessageCount",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0x47fb24c5",
            "chef:signature": "setDelayedInbox(address,bool)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "setDelayedInbox",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "inbox",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bool",
                    "name": "enabled",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0x4f61f850",
            "chef:signature": "setSequencerInbox(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "setSequencerInbox",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "_sequencerInbox",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0xf81ff3b3",
            "chef:signature": "setSequencerReportedSubMessageCount(uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "setSequencerReportedSubMessageCount",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "newMsgCount",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0x7a88b107",
            "chef:signature": "submitBatchSpendingReport(address,bytes32)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "submitBatchSpendingReport",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bytes32",
                    "name": "messageDataHash",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Bridge"
                }
            ]
        },
        {
            "@id": "0xda0228cb326cf032e937292b47c232c8c9edd094cd6ef778005092121d3a2aeb",
            "chef:signature": "0(address)",
            "@type": "chef:Event",
            "evm:stateMutability": "nonpayable",
            "chef:name": "0",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "_singleton",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                },
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/GnosisSafe"
                }
            ]
        },
        {
            "@id": "0x01ccad02",
            "chef:signature": "getCountsAndAccumulators(address,address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getCountsAndAccumulators",
            "chef:inputs": [
                {
                    "internalType": "contract IBridge",
                    "name": "delayedBridge",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "contract ISequencerInbox",
                    "name": "sequencerInbox",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256[2]",
                    "name": "counts",
                    "type": "uint256[2]",
                    "@type": "uint256[2]"
                },
                {
                    "internalType": "bytes32[2]",
                    "name": "accs",
                    "type": "bytes32[2]",
                    "@type": "bytes32[2]"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/BridgeUtils"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x85b6a949bf20bfd6bc6e20f98fb490c7944ab61dcfa5a30b5dae543412c9a8a0",
            "chef:signature": "DelayedInboxForced(uint256,bytes32,uint256,uint256,bytes32[2],uint256)",
            "@type": "chef:Event",
            "chef:name": "DelayedInboxForced",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "firstMessageNum",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "beforeAcc",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "newMessageCount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "totalDelayedMessagesRead",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "bytes32[2]",
                    "name": "afterAccAndDelayed",
                    "type": "bytes32[2]",
                    "@type": "bytes32[2]"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "seqBatchIndex",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xce86e570206e55533301cb66529b33afbd75e991c575b85adeaca10146be8cb4",
            "chef:signature": "IsSequencerUpdated(address,bool)",
            "@type": "chef:Event",
            "chef:name": "IsSequencerUpdated",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "addr",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "isSequencer",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x3bcd3c6d4304309e4b36d94f90517baf304582bb1ac828906808577e067e6b6e",
            "chef:signature": "MaxDelayUpdated(uint256,uint256)",
            "@type": "chef:Event",
            "chef:name": "MaxDelayUpdated",
            "chef:inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "newMaxDelayBlocks",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "newMaxDelaySeconds",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x3bf85aebd2a1dc6c510ffc4795a3785e786b5817ab30144f88501d4c6456c986",
            "chef:signature": "SequencerBatchDelivered(uint256,bytes32,uint256,bytes32,bytes,uint256[],uint256[],uint256,address)",
            "@type": "chef:Event",
            "chef:name": "SequencerBatchDelivered",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "firstMessageNum",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "beforeAcc",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "newMessageCount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "afterAcc",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "indexed": false,
                    "internalType": "bytes",
                    "name": "transactions",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "indexed": false,
                    "internalType": "uint256[]",
                    "name": "lengths",
                    "type": "uint256[]",
                    "@type": "uint256[]"
                },
                {
                    "indexed": false,
                    "internalType": "uint256[]",
                    "name": "sectionsMetadata",
                    "type": "uint256[]",
                    "@type": "uint256[]"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "seqBatchIndex",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "sequencer",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x10e0571aafaf282151fd5b0215b5495521c549509cb0de3a3f8310bd2e344682",
            "chef:signature": "SequencerBatchDeliveredFromOrigin(uint256,bytes32,uint256,bytes32,uint256)",
            "@type": "chef:Event",
            "chef:name": "SequencerBatchDeliveredFromOrigin",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "firstMessageNum",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "beforeAcc",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "newMessageCount",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "afterAcc",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "seqBatchIndex",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                }
            ]
        },
        {
            "@id": "0x1a734229",
            "chef:signature": "addSequencerL2Batch(bytes,uint256[],uint256[],bytes32)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "addSequencerL2Batch",
            "chef:inputs": [
                {
                    "internalType": "bytes",
                    "name": "transactions",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "uint256[]",
                    "name": "lengths",
                    "type": "uint256[]",
                    "@type": "uint256[]"
                },
                {
                    "internalType": "uint256[]",
                    "name": "sectionsMetadata",
                    "type": "uint256[]",
                    "@type": "uint256[]"
                },
                {
                    "internalType": "bytes32",
                    "name": "afterAcc",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                }
            ]
        },
        {
            "@id": "0x44c7cc30",
            "chef:signature": "addSequencerL2BatchFromOrigin(bytes,uint256[],uint256[],bytes32)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "addSequencerL2BatchFromOrigin",
            "chef:inputs": [
                {
                    "internalType": "bytes",
                    "name": "transactions",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "uint256[]",
                    "name": "lengths",
                    "type": "uint256[]",
                    "@type": "uint256[]"
                },
                {
                    "internalType": "uint256[]",
                    "name": "sectionsMetadata",
                    "type": "uint256[]",
                    "@type": "uint256[]"
                },
                {
                    "internalType": "bytes32",
                    "name": "afterAcc",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                }
            ]
        },
        {
            "@id": "0x8a2df18d",
            "chef:signature": "addSequencerL2BatchFromOriginWithGasRefunder(bytes,uint256[],uint256[],bytes32,address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "addSequencerL2BatchFromOriginWithGasRefunder",
            "chef:inputs": [
                {
                    "internalType": "bytes",
                    "name": "transactions",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "uint256[]",
                    "name": "lengths",
                    "type": "uint256[]",
                    "@type": "uint256[]"
                },
                {
                    "internalType": "uint256[]",
                    "name": "sectionsMetadata",
                    "type": "uint256[]",
                    "@type": "uint256[]"
                },
                {
                    "internalType": "bytes32",
                    "name": "afterAcc",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "internalType": "contract IGasRefunder",
                    "name": "gasRefunder",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                }
            ]
        },
        {
            "@id": "0xb71939b1",
            "chef:signature": "delayedInbox()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "delayedInbox",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "contract IBridge",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                }
            ]
        },
        {
            "@id": "0x0c4a1e59",
            "chef:signature": "forceInclusion(uint256,uint8,uint256[2],uint256,uint256,address,bytes32,bytes32)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "forceInclusion",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "_totalDelayedMessagesRead",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint8",
                    "name": "kind",
                    "type": "uint8",
                    "@type": "uint8"
                },
                {
                    "internalType": "uint256[2]",
                    "name": "l1BlockAndTimestamp",
                    "type": "uint256[2]",
                    "@type": "uint256[2]"
                },
                {
                    "internalType": "uint256",
                    "name": "inboxSeqNum",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "gasPriceL1",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bytes32",
                    "name": "messageDataHash",
                    "type": "bytes32",
                    "@type": "bytes32"
                },
                {
                    "internalType": "bytes32",
                    "name": "delayedAcc",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                }
            ]
        },
        {
            "@id": "0xd9b141ff",
            "chef:signature": "getInboxAccsLength()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "getInboxAccsLength",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                }
            ]
        },
        {
            "@id": "0xc0c53b8b",
            "chef:signature": "initialize(address,address,address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "initialize",
            "chef:inputs": [
                {
                    "internalType": "contract IBridge",
                    "name": "_delayedInbox",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_sequencer",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_rollup",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                }
            ]
        },
        {
            "@id": "0x6d46e987",
            "chef:signature": "isSequencer(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "isSequencer",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                }
            ]
        },
        {
            "@id": "0xe367a2c1",
            "chef:signature": "maxDelayBlocks()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "maxDelayBlocks",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                }
            ]
        },
        {
            "@id": "0x342025fa",
            "chef:signature": "maxDelaySeconds()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "maxDelaySeconds",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                }
            ]
        },
        {
            "@id": "0x06cc91b2",
            "chef:signature": "proveBatchContainsSequenceNumber(bytes,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "proveBatchContainsSequenceNumber",
            "chef:inputs": [
                {
                    "internalType": "bytes",
                    "name": "proof",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "uint256",
                    "name": "_messageCount",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                }
            ]
        },
        {
            "@id": "0xdc1b7b1f",
            "chef:signature": "proveInboxContainsMessage(bytes,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "proveInboxContainsMessage",
            "chef:inputs": [
                {
                    "internalType": "bytes",
                    "name": "proof",
                    "type": "bytes",
                    "@type": "bytes"
                },
                {
                    "internalType": "uint256",
                    "name": "_messageCount",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32",
                    "@type": "bytes32"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                }
            ]
        },
        {
            "@id": "0x5c1bba38",
            "chef:signature": "sequencer()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "sequencer",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                }
            ]
        },
        {
            "@id": "0x1f956632",
            "chef:signature": "setIsSequencer(address,bool)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "setIsSequencer",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "addr",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bool",
                    "name": "newIsSequencer",
                    "type": "bool",
                    "@type": "bool"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                }
            ]
        },
        {
            "@id": "0x4d480faa",
            "chef:signature": "setMaxDelay(uint256,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "setMaxDelay",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "newMaxDelayBlocks",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "newMaxDelaySeconds",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                }
            ]
        },
        {
            "@id": "0x7fa3a40e",
            "chef:signature": "totalDelayedMessagesRead()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "totalDelayedMessagesRead",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/SequencerInbox"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x0dd664a155dd89526bb019e22b00291bb7ca9d07ba3ec4a1a76b410da9797ceb",
            "chef:signature": "TokenSet(address,address)",
            "@type": "chef:Event",
            "chef:name": "TokenSet",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "l1Address",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "l2Address",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                }
            ]
        },
        {
            "@id": "0x1d3a689f",
            "chef:signature": "forceRegisterTokenToL2(address[],address[],uint256,uint256,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "forceRegisterTokenToL2",
            "chef:inputs": [
                {
                    "internalType": "address[]",
                    "name": "_l1Addresses",
                    "type": "address[]",
                    "@type": "address[]"
                },
                {
                    "internalType": "address[]",
                    "name": "_l2Addresses",
                    "type": "address[]",
                    "@type": "address[]"
                },
                {
                    "internalType": "uint256",
                    "name": "_maxGas",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_gasPriceBid",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_maxSubmissionCost",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                }
            ]
        },
        {
            "@id": "0xf8c8765e",
            "chef:signature": "initialize(address,address,address,address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "initialize",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "_l1Counterpart",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_l1Router",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_inbox",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_owner",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                }
            ]
        },
        {
            "@id": "0x8a2dc014",
            "chef:signature": "l1ToL2Token(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "l1ToL2Token",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                }
            ]
        },
        {
            "@id": "0xca346d4a",
            "chef:signature": "registerTokenToL2(address,uint256,uint256,uint256,address)",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "registerTokenToL2",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                }
            ]
        },
        {
            "@id": "0xf26bdead",
            "chef:signature": "registerTokenToL2(address,uint256,uint256,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "payable",
            "chef:name": "registerTokenToL2",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "_l2Address",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_maxGas",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_gasPriceBid",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_maxSubmissionCost",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1CustomGateway"
                }
            ]
        },
        {
            "@id": "0x16b9109b",
            "chef:signature": "nodeConfirmed(uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "nodeConfirmed",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "nodeNum",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/RollupEventBridge"
                }
            ]
        },
        {
            "@id": "0x8b8ca199",
            "chef:signature": "nodeCreated(uint256,uint256,uint256,address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "nodeCreated",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "nodeNum",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "prev",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "deadline",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "asserter",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/RollupEventBridge"
                }
            ]
        },
        {
            "@id": "0x30a826b4",
            "chef:signature": "nodeRejected(uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "nodeRejected",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "nodeNum",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/RollupEventBridge"
                }
            ]
        },
        {
            "@id": "0xbc49accb",
            "chef:signature": "rollupInitialized(uint256,uint256,address,bytes)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "rollupInitialized",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "confirmPeriodBlocks",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "avmGasSpeedLimitPerBlock",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "bytes",
                    "name": "extraConfig",
                    "type": "bytes",
                    "@type": "bytes"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/RollupEventBridge"
                }
            ]
        },
        {
            "@id": "0xf03c04a5",
            "chef:signature": "stakeCreated(address,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "stakeCreated",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "staker",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "nodeNum",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/RollupEventBridge"
                }
            ]
        },
        {
            "@id": "0x59659e90",
            "chef:signature": "beacon()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "beacon",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "contract UpgradeableBeacon",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OldOutbox"
                }
            ]
        },
        {
            "@id": "0x6d5161ec",
            "chef:signature": "outboxes(uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "outboxes",
            "chef:inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "contract OutboxEntry",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OldOutbox"
                }
            ]
        },
        {
            "@id": "0x05d3efe6",
            "chef:signature": "outboxesLength()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "outboxesLength",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/OldOutbox"
                }
            ]
        },
        {
            "@id": "0x97853154274c729b7cebd006d94263528f14735174028cf3fb2fdf3194d8c79f",
            "chef:signature": "0(address,address,address,address,address,address)",
            "@type": "chef:Event",
            "evm:stateMutability": "nonpayable",
            "chef:name": "0",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "_l2Counterpart",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_l1Router",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_inbox",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_l1Dai",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_l2Dai",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_l1Escrow",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1DaiGateway"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a",
            "chef:signature": "Closed()",
            "@type": "chef:Event",
            "chef:name": "Closed",
            "chef:inputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1DaiGateway"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x184450df2e323acec0ed3b5c7531b81f9b4cdef7914dfd4c0a4317416bb5251b",
            "chef:signature": "Deny(address)",
            "@type": "chef:Event",
            "chef:name": "Deny",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "usr",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1DaiGateway"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a60",
            "chef:signature": "Rely(address)",
            "@type": "chef:Event",
            "chef:name": "Rely",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "usr",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1DaiGateway"
                }
            ]
        },
        {
            "@id": "0x43d726d6",
            "chef:signature": "close()",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "close",
            "chef:inputs": [],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1DaiGateway"
                }
            ]
        },
        {
            "@id": "0x9c52a7f1",
            "chef:signature": "deny(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "deny",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "usr",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1DaiGateway"
                }
            ]
        },
        {
            "@id": "0x47535d7b",
            "chef:signature": "isOpen()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "isOpen",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1DaiGateway"
                }
            ]
        },
        {
            "@id": "0x59784bb7",
            "chef:signature": "l1Dai()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "l1Dai",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1DaiGateway"
                }
            ]
        },
        {
            "@id": "0x000cc9e6",
            "chef:signature": "l1Escrow()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "l1Escrow",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1DaiGateway"
                }
            ]
        },
        {
            "@id": "0x407395e0",
            "chef:signature": "l1Router()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "l1Router",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1DaiGateway"
                }
            ]
        },
        {
            "@id": "0x8e7c8efe",
            "chef:signature": "l2Counterpart()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "l2Counterpart",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1DaiGateway"
                }
            ]
        },
        {
            "@id": "0x422e67f4",
            "chef:signature": "l2Dai()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "l2Dai",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1DaiGateway"
                }
            ]
        },
        {
            "@id": "0x65fae35e",
            "chef:signature": "rely(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "rely",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "usr",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1DaiGateway"
                }
            ]
        },
        {
            "@id": "0xbf353dbb",
            "chef:signature": "wards(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "wards",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/L1DaiGateway"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0x6eb26f176dd9180849dd4874d3530de0e5c1f62a6e6798d34e3abfc11f1db2cc",
            "chef:signature": "TemplateUpdated()",
            "@type": "chef:Event",
            "chef:name": "TemplateUpdated",
            "chef:inputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ValidatorWalletCreator"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xca0b7dde26052d34217ef1a0cee48085a07ca32da0a918609937a307d496bbf5",
            "chef:signature": "WalletCreated(address,address,address)",
            "@type": "chef:Event",
            "chef:name": "WalletCreated",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "walletAddress",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "userAddress",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "adminProxy",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ValidatorWalletCreator"
                }
            ]
        },
        {
            "@id": "0x11ebbf24",
            "chef:signature": "createWallet()",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "createWallet",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ValidatorWalletCreator"
                }
            ]
        },
        {
            "@id": "0x89c716d1",
            "chef:signature": "setTemplate(address)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "setTemplate",
            "chef:inputs": [
                {
                    "internalType": "address",
                    "name": "_template",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ValidatorWalletCreator"
                }
            ]
        },
        {
            "@id": "0x6f2ddd93",
            "chef:signature": "template()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "template",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/ValidatorWalletCreator"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x0905aa5c",
            "chef:signature": "withdrawnTokens()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "withdrawnTokens",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Disbursement"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x0b97bc86",
            "chef:signature": "startDate()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "startDate",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Disbursement"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x4bc9fdc2",
            "chef:signature": "calcMaxWithdraw()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "calcMaxWithdraw",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Disbursement"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0x521eb273",
            "chef:signature": "wallet()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "wallet",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Disbursement"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0x96450a6d",
            "chef:signature": "walletWithdraw()",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "walletWithdraw",
            "chef:inputs": [],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Disbursement"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0xe47a6a9f",
            "chef:signature": "disbursementPeriod()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "disbursementPeriod",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Disbursement"
                }
            ]
        },
        {
            "constant": false,
            "payable": false,
            "@id": "0xf3fef3a3",
            "chef:signature": "withdraw(address,uint256)",
            "@type": "chef:Function",
            "evm:stateMutability": "nonpayable",
            "chef:name": "withdraw",
            "chef:inputs": [
                {
                    "name": "_to",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "name": "_value",
                    "type": "uint256",
                    "@type": "uint256"
                }
            ],
            "chef:outputs": [],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Disbursement"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0xf7260d3e",
            "chef:signature": "receiver()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "receiver",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Disbursement"
                }
            ]
        },
        {
            "constant": true,
            "payable": false,
            "@id": "0xfc0c546a",
            "chef:signature": "token()",
            "@type": "chef:Function",
            "evm:stateMutability": "view",
            "chef:name": "token",
            "chef:inputs": [],
            "chef:outputs": [
                {
                    "name": "",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Disbursement"
                }
            ]
        },
        {
            "payable": false,
            "@id": "0x9612153842e010a7e32f6bb90905a1ddc2b1edf059e2f69aaa4220bab498562c",
            "chef:signature": "0(address,address,uint256,uint256,address)",
            "@type": "chef:Event",
            "evm:stateMutability": "nonpayable",
            "chef:name": "0",
            "chef:inputs": [
                {
                    "name": "_receiver",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "name": "_wallet",
                    "type": "address",
                    "@type": "address"
                },
                {
                    "name": "_disbursementPeriod",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "name": "_startDate",
                    "type": "uint256",
                    "@type": "uint256"
                },
                {
                    "name": "_token",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/Disbursement"
                }
            ]
        },
        {
            "@id": "0xf3e06989d9b34638201c76bab136334b5a2c77219c64e18e07bf6e2c47f55f71",
            "chef:signature": "0((uint64,uint64,address,uint256,bytes32,address,address,uint256,(uint256,uint256,uint256,uint256)),(address,address,address,address,address,address,address,address,address,address))",
            "@type": "chef:Event",
            "evm:stateMutability": "nonpayable",
            "chef:name": "0",
            "chef:inputs": [
                {
                    "components": [
                        {
                            "internalType": "uint64",
                            "name": "confirmPeriodBlocks",
                            "type": "uint64"
                        },
                        {
                            "internalType": "uint64",
                            "name": "extraChallengeTimeBlocks",
                            "type": "uint64"
                        },
                        {
                            "internalType": "address",
                            "name": "stakeToken",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "baseStake",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "wasmModuleRoot",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "loserStakeEscrow",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "chainId",
                            "type": "uint256"
                        },
                        {
                            "components": [
                                {
                                    "internalType": "uint256",
                                    "name": "delayBlocks",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "futureBlocks",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "delaySeconds",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "futureSeconds",
                                    "type": "uint256"
                                }
                            ],
                            "internalType": "struct ISequencerInbox.MaxTimeVariation",
                            "name": "sequencerInboxMaxTimeVariation",
                            "type": "tuple"
                        }
                    ],
                    "internalType": "struct Config",
                    "name": "config",
                    "type": "tuple",
                    "@type": "tuple"
                },
                {
                    "components": [
                        {
                            "internalType": "contract IBridge",
                            "name": "bridge",
                            "type": "address"
                        },
                        {
                            "internalType": "contract ISequencerInbox",
                            "name": "sequencerInbox",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IInbox",
                            "name": "inbox",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IOutbox",
                            "name": "outbox",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IRollupEventInbox",
                            "name": "rollupEventInbox",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IChallengeManager",
                            "name": "challengeManager",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IRollupAdmin",
                            "name": "rollupAdminLogic",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IRollupUser",
                            "name": "rollupUserLogic",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "validatorUtils",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "validatorWalletCreator",
                            "type": "address"
                        }
                    ],
                    "internalType": "struct ContractDependencies",
                    "name": "connectedContracts",
                    "type": "tuple",
                    "@type": "tuple"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/RollupAdminLogic"
                }
            ]
        },
        {
            "anonymous": false,
            "@id": "0xf7eed2a7fabbf1bec8d55ed5e785cc76622376dde5df4ff15470551e030b8134",
            "chef:signature": "UpgradedSecondary(address)",
            "@type": "chef:Event",
            "chef:name": "UpgradedSecondary",
            "chef:inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "implementation",
                    "type": "address",
                    "@type": "address"
                }
            ],
            "chef:deployments": [
                {
                    "@type": "chef:ContractDeployment",
                    "@id": "colorfulnotion/awesome-web3/ethereum/arbitrum/RollupAdminLogic"
                }
            ]
        }
    ]
}